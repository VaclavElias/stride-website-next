[
{
    
    "title":"Blog Tags",
    "excerpt": "",
    "author": "",
    "date": "March 27, 2023",
    "category": "",
    "tags": "search",
    "url":"https://stride3d.net/tags/",
    "content":"Welcome to the Tags page, where you can explore all the blog posts grouped by topic. 4.0 Stride 4.0 is Now Live 4.1 Stride 4.1 is Now Live Announcement Stride Blog is OnlineVL.Stride Released by vvvvWelcome TurboPlay as Gold SponsorXenko Has Been Renamed to StrideXenko is Going Open Source Meeting Community Meeting February 2022Community Meeting November 2021Community Meeting October 2021Community Meeting May 2020Recap January 2020Recap December 2019Community Meeting December 2019Recap October 2019Community Meeting January 2019 Physics Stride 4.1 is Now Live Release Stride 4.1 is Now LiveStride 4.0 is Now LiveXenko 3.1 ReleasedXenko 3.1 Beta ReleasedXenko 1.0 Alpha Released Sponsor Open Collective Tutorials Stride 4.0 is Now LiveStride 4.1 is Now LiveXenko 3.1 Released"
  },{
    
    "title":"Blog Archive",
    "excerpt": "",
    "author": "",
    "date": "March 27, 2023",
    "category": "",
    "tags": "search",
    "url":"https://stride3d.net/archive/",
    "content":"Welcome to the Stride Blog Archive page. Explore the blog's archive of .NET and C# posts, organized by year. Catch up on past content and discover new insights, tips, and inspiration.2022Feb 16 Community Meeting February 2022Jul 16 Stride 4.1 is Now Live2021Feb 01 Stride 4.0 is Now LiveOct 01 Community Meeting October 2021Oct 31 Open CollectiveNov 29 Community Meeting November 20212020Feb 03 Recap January 2020Apr 20 Xenko Has Been Renamed to StrideMay 08 Community Meeting May 2020Oct 02 VL.Stride Released by vvvv2019Jan 19 Community Meeting January 2019Feb 12 Welcome TurboPlay as Gold SponsorMay 31 Starbreach DemoJul 19 Community Meeting #2Sep 23 September 2019Oct 01 Contributor Meeting #1Oct 04 Xenko meets vvvvOct 31 Recap October 2019Nov 11 Xenko 3.1 ReleasedDec 18 Community Meeting December 2019Dec 31 Recap December 20192018Dec 24 Xenko 3.1 Beta Released2014Sep 05 Stride Blog is OnlineSep 06 Xenko 1.0 Alpha ReleasedOct 17 Xenko is Going Open SourceNov 11 Forums Opened, New Release With Image-Based Lighting"
  },{
    
    "title":"Stride 4.1 is Now Live",
    "excerpt": " Stride contributors are proud to announce a new release now running on .NET 6 supporting the latest C# 10. That means you can now head to the download page...",
    "author": "Aggror Jorn",
    "date": "July 16, 2022",
    "category": "",
    "tags": "blog, search, 4.1, Physics, Tutorials, Release",
    "url":"https://stride3d.net/blog/release-stride-4-1/",
    "content":"Stride contributors are proud to announce a new release now running on .NET 6 supporting the latest C# 10. That means you can now head to the download page and start developing your games using the latest .NET technologies.Stride On .NET Live Improvements Summary Improvement Details Dithered shadows for semi-transparent materials Physics constraints Physics optimizations Improved editor gizmos Intermediate tutorials Known Issues Integrated C# Editor A Little Help Contributors Financial contributors Stride On .NET Live 🔗We had the pleasure to be on a live stream with the .NET team! We gave an introduction, overview and some live demos:Improvements Summary 🔗Here's a non-exhaustive list of new improvements:.NET 6 support and VS 2022 pluginStride 4.1 leverages the power of .NET 6Support for C# 10Dithered shadows for semi-transparent materialsPhysics constraintsBullet constraints wrapped around in easy to use functionalityEditor gizmos for physics constraintsPhysics performance optimizationACES tonemapingFog image effectOutline image effectImproved editor gizmosC# Intermediate tutorials projectThis Open Collective sub-project was successfully funded by the community. All related video recordings are available on Stride's Youtube channel and the tutorials page in the documentation will also be update to reflect the new project.Many more minor fixes and quality of life improvementsFixed sample gameSimpler Procedural Model creationNew math signatures (1122, 1121, 1090)Dispatcher/threadpool improvementsAmbient Occlusion quality improvementAnd many other fixesImprovement Details 🔗Dithered shadows for semi-transparent materials 🔗Produces semi-transparent shadows by poking more and more holes in the shadow map based on the transparency of the object, shadow map filtering will blur those holes with their neighbor which will result in those partially opaque pixels.Physics constraints 🔗Stride's physics system Bullet comes with a set of constraints for you to use in your projects. These constraints are now all visible inside the editor, previewing the constraints using various editor gizmo.For more information on all the types of constraints, you can read up about them in the Stride documentation or watch the video below.Physics optimizations 🔗Retrieving collision and contact information was previously done by re-testing all components for collisions, which, as one might expect, led to awful performance for physics heavy scenes (could take up to and above 90% of the frame).Contacts are now lazily evaluated to reduce overhead when nothing ends up reading them. Users can now read and iterate over all collisions through Simulation.CurrentCollisions.Improved editor gizmos 🔗The old gizmos weren't very nice to look at, so this feature makes them look better and more user-friendly. It also changes how the rotation gizmo works and adds scale planes to the scale gizmo.This feature also updates the text on the CameraOrientationGizmo to be XYZ instead of right/left. Still prefer the old text instead of the XYZ coordinate? Don't worry, there's a setting under the viewport settings that swaps it back to the old text.Intermediate tutorials 🔗One of the first Open Collective sub-projects is the intermediate C# tutorials project. After discussion in community meetings and with various contributors donating directly to this project, the amount for this project to be included in Stride quickly became a realization.With Stride 4.1, you will be able to select the C# intermediate tutorials project as a new template project. The template project contains (at the moment of writing) 11 topics that every developer will want to have a look at.UI basicsCollision triggersRaycastingProjecting and UnprojectingAsync(hronous) scriptsScene loadingAnimation basicsAudioFirst person cameraThird person cameraNavigationEach tutorial has a video tutorial accompanying it, which can be found on Stride's Youtube channel. Below you can find the full playlist.Known Issues 🔗Integrated C# Editor 🔗The transition to .NET6 unfortunately broke the help tooltips and the code completion of the integrated C# code editor. But we decided to accept it for now, as everyone is using a proper C# editor anyways, such as Visual Studio, Rider or Visual Studio Code.The reason for the error is that RoslynPad, the underlaying library, also needs an update or fix. We'll adress this in one of the upcoming minor version releases.A Little Help 🔗We, contributors, believe that Stride can help .NET game developers make the games they want with ease using their favorite languages. We want to make sure Stride offers the most comfortable environment for developing games, and this takes time and effort.Since the free and open-source release of Stride, the community has been growing slowly, so we have decided to open a fund to reward developers for any contribution they make to Stride. We set up an Open Collective page to manage our funds and allocate money for features that the community would like to see implemented.We have various bounties for bug fixes and features (Vulkan support, decals, morph targets, and many others). If you have or know someone with the skills to tackle those bounties, please reach out to us through the respective Github tickets. You can also contact us through our discord server or on Github to propose new bounties.Contributors 🔗Many thanks to all the contributors who have donated their time and skill by adding features, fixing bugs, managing the build pipelines, adding documentation, and reviewing PRs.Financial contributors 🔗Also, a huge thanks to the individuals and companies who contributed financially to our Open Collective!ORE System with a diamond sponsorshipxen2 Core contributor that donated a large portion of the previous Patreon back through Open collectivevvvv A visual live-programming environment for easy prototyping and development. It is designed to facilitate the handling of large media environments with physical interfaces, real-time motion graphics, audio and video that can interact with many users simultaneously. vvvv uses StrideVašoMitchel AlbertzBillIdeonellaSoul Ridernajak3dEiderenJorn AggrorMarian DziubiakYouness KAFIADavid ThunderclownChristian ClavetMarko ViitanenAaron Disibioz16IncognitoWalter HulsebosTheKeybladerJames RinkerztlBruno GarciaBanditRevolverEmmXSeleDreamsVignetteLongplay GamesRedberd36"
  },{
    
    "title":"Community Meeting February 2022",
    "excerpt": " The Striders discussed allocating their $4,220.48 USD budget for bug bounties and new features. Funding proposals include fullscreen Vulkan support, UI slowness bug research, Linux runtime support, decal support,...",
    "author": "Aggror Jorn",
    "date": "February 16, 2022",
    "category": "",
    "tags": "blog, search, Meeting",
    "url":"https://stride3d.net/blog/community-meeting-february-2022/",
    "content":"The Striders discussed allocating their $4,220.48 USD budget for bug bounties and new features. Funding proposals include fullscreen Vulkan support, UI slowness bug research, Linux runtime support, decal support, morphing target animation support, and embedding Stride into UI frameworks. Release 4.1 is in progress, and an Epic grant proposal is being prepared.Summary 🔗On February 16th, we held a whopping 2.5-hour community meeting covering various subjects.Summary Current Funding Funding for bug bounties Funding for features Release 4.1 Additional task for Xen2 Work in progress Epic grant Current Funding 🔗With a budget of $4,220.48 USD at the moment of the community meeting happening, we wanted to decide on whether to allocate money for bugs and new features. So a big thanks to all those who are donating to this project. In particular:ORE system💎VVVV🥇Vašo ( Vaclav )🥇Funding for bug bounties 🔗Fullscreen Vulkan supportGithub ticketBounty: $200,- USDAggrorJorn will provide the texts for the bounty and once approved by other contributors/developers in the team, this will be updated on the Open Collective project for Bug bounties.UI slowness bugGithub ticketA smaller $50,- USD bounty for more research on this bug. If it can be pinpointed what exactly is causing this, we can also estimate better whether it is worth spending more money on it.Depending on the outcome we might skip this bug and spend time researching/implementing a replacement UI.AggrorJorn will provide the texts for the bounty and once approved by other contributors/developers in the team, this will be updated on the Open Collective project for Bug bountiesFunding for features 🔗Linux runtime supportGithub ticketRequires mores fleshed out details and deliverablesOnce that is done, we can decide on fundingEither fixed amount or use xx,xx amount per hour with a certain limit.New Open collective project Linux runtimeDecal supportGithub discussion requires more deliverablesNew Open collective project Decals added and will be updated once deliverables are clear:]Morphing target animation supportGithub discussion requires more deliverablesNew Open collective project Morhping Target added and will be updated once deliverables are clear:Embed stride into UI frameworksThere already is a work in progress PR that allows developers to specify a custom render context.New Open collective Project for Embedding Stride into UI frameworksSilk.NETNew Open collective project Silk.NETRelease 4.1 🔗Release notes wip are prepared by Eideren/Vaso/Yka.Final checks by Xen2: VS pluginAdditional task for Xen2 🔗Documentation needs to auto-release when Release branch is updatedAsk previous implementer of SPIR-V shader system if he is interested in new work for StrideWork in progress 🔗Code only project: will enter beta phaseWhen merged into Stride 4.2 beta, we will add an Open collective page for additional examples.C# Pong game example: finishing touches (sound)The following C# intermediate tutorials are written but not yet recorded:UI basicsBoth via the editor as well as entirely through codeScene loadingLoading/UnloadingReloading scenesChild scenesCollision triggersRaycastingAnimation basicsAudioSmall tutorial reallyNavigation meshes and pathfindingBoth editor as well as code only approachesSync vs AsyncDifference and 2 examplesEpic grant 🔗Yka and AggrorJorn have a look at Epic grant and make final proposal in the 3rd week of February"
  },{
    
    "title":"Community Meeting November 2021",
    "excerpt": " After a month on Open Collective, the Stride collective reached $1,984.31 USD and discussed funding for various projects. Plans for requesting an Epic grant are in progress. Ongoing development...",
    "author": "Jorn Theunissen",
    "date": "November 29, 2021",
    "category": "",
    "tags": "blog, search, Meeting",
    "url":"https://stride3d.net/blog/community-meeting-november-2021/",
    "content":"After a month on Open Collective, the Stride collective reached $1,984.31 USD and discussed funding for various projects. Plans for requesting an Epic grant are in progress. Ongoing development includes physics constraints, splines, and the upcoming release of version 4.1.Summary 🔗November 29th we had another commmunity meeting. This blog post summarizes the topics we talked about.Summary Sponsors A Month of Open Collective Preparing Request Epic Grant Other Action Items Ongoing Development Sponsors 🔗Started of with a thank you to all those who donated on the new sponsor platform: Open collective. In particular a big thanks to:Xen2, who decided that he wanted to contribute some of the Patreon money back in to the community.ORE system💎VVVV🥇Vašo ( Vaclav )🥇A Month of Open Collective 🔗After a month using the new sponsor platform, the Stride collective has reached a balance of $1,984.31 USD. We started discussing how and where the money should be distributed to. We want to do this with the help of Open collective 'Projects'. These projects are listed on Stride's Open collective page, and have their own tiers, targets and description. Users can sponsor projects directly instead of the main Stride collective if they want to.We have come up with several projects that need to be written out in more detail before we will add them to the Open collective page. All tickets below have a Github disscusion for more details.OC project: Bug bounties projectBefore starting on an issue, make it known on Github and Discord that your are willing to tackle the issue. It would be a shame if multiple people try to solve the same issue.Any PR to the Stride repo must be reviewed by a contributor and discussed if needed.Once a PR is reviewed and merged to the Stride repo, the submitter 60% of the bounty.The submitter receives the remaining 40% when stride release happens.Github DiscussionOC project: .NET 6 platforms supportIn order for proper support for macOs, we need hardware to test this on. Xen2 will look in to the hardware requirements for this.Github DiscussionOC project: Shader systemXen2 will gather info and budget requirementsGithub DiscussionOC project: Linux/macOS support'A rather large topic that require a lot of work is the the support for Linux and/or macOs. When worked out in more detail, it can be used in the plan for requesting an Epic grant. Subtopics to resolve:Runtime/3dBuild tools (able to msbuild a Stride project and have the asset compiler work on it) requirement: FBX/AssimpEditorGithub DiscussionPreparing Request Epic Grant 🔗For a while now we have been wanting to pursue the option of requesting an Epig grant. In order to do so however, we need to come up with a proper plan. The endgoal is to have a proper document explaining what we want to do, and how we plan to spend any given budget.AggrorJorn starts a github ticket where we gather info on the request to Epic. He will contact others for proof read and further info. Github DiscussionSome of the topics mentioned:Shader systemEditor rewriteMegascan IntegrationECS rewrite/Run Update() and Render() in parallelOther Action Items 🔗We close forum in December as there is almost no activity there. We want to utilize Discord and Github discussion for this. The forum will be read only but we will no longer refer to it from the website and Github.Use a Github project for remaining tasks: OverviewGithub ticket on a simple free community marketplaceGithub DiscussionA lot of people have made usefull components/utilities/art and other usefull assets for in Stride projects. Right now we don't have a quick and easy to import such assets in to an existing (editor) project.What we can do it is utilise the existing Nuget (tagging) system so that users can quickly add a component to their ongoing project in the editor.Documentation on the stride source/new comers tutorialYKA, Manio143 and Tebjan collect some info for a tutorial: Github DiscussionOngoing Development 🔗Manio143: finishing touches/documentation for Physics constraintsAggrorJorn: SplinesTrying to finish the base splines which could be integrated in to the Stride source. Other Spline based components should be added later, so that we can have a milestone finished.Some tricky stuff with custom translation gizmo's for controlling tangents in the editor are currently holding me back. If this isn't resolved quickly I will make a PR without this (nice to have) featureRelease of 4.1 only held back by final .NET 6 related fixes. After that Xen2 will prepare release. AggrorJorn will aid in blogpost release notes"
  },{
    
    "title":"Open Collective",
    "excerpt": " Stride has been using Patreon and Github sponsors for a while now. However, in the recent community meeting of october 1st it became apparent that these donation platforms don't...",
    "author": "Aggror Jorn",
    "date": "October 31, 2021",
    "category": "",
    "tags": "blog, search, Sponsor",
    "url":"https://stride3d.net/blog/open-collective/",
    "content":"Stride has been using Patreon and Github sponsors for a while now. However, in the recent community meeting of october 1st it became apparent that these donation platforms don't really suit all of our needs. Both Github sponsors and Patreon don't really show where the money is going.To solve this we have been looking at a different platform that allows us to communicate more openly on our expenses and where money will be spent. After some investigation and various registration and other formalities, we can now say goodbye to Patreon, as Stride will from now use the Open Collective platform.Summary 🔗Summary Open (Source) Collective Payments and Expenses Projects What's Next? Open (Source) Collective 🔗Open collective is similar to other sponsor platforms, but sticks out in the way it openly displays payments and expenses. Everything about it is open for everyone to see. Through various Tiers, people can sponsor the Stride game engine. Each tier will have its own reward(s). Some tiers for instance will have the reward that users are shown on the stride website as a thank you. This is being worked on.We also needed a good way to deal with payments towards contributors and any tax related activities that come with it. Open collective allows the Stride collective to join a so-called 'Fiscal host' which takes care of all of that for us, for a percentage of the money contributed. After some communication and verification on the Stride github repository we are now also officially connected with the Open Source Collective. The Open Source Collective has various open source projects under its wing: WebPack, VueJs, OBS, Babel, Bootstrap and many more.Payments and Expenses 🔗Every payment made to a contributor will always show up on the Stride's open collective. A Stride contributor can submit an invoice: for instance the cost of Google accounts or domain names. These invoices can be approved by the Stride contributors team. These are the same people that are active members of the Stride Contributors team on Github. Submitted invoices can be approved at any given time but allocating money for specific projects is done at the end of each month (or beginning).Projects 🔗The Stride contributors have the final call where all the collected money will be allocated too. This will be done with the help of Projects. This Open Collective feature acts as a sort of 'Ledger' where money can be stored until the time comes to pay the contributor(s) of a project. A project can have its own tiers and goals. Those projects could be all sorts of things: new engine features, research on new technology, high priority bugs or documentation. These kinds of projects will be discussed at community meetings to get the input of the Stride community. Here is an example project.People can also choose to donate to a specific project rather than the Stride collective in general if they want to. So if you only want to see your money being used for a specific cause, you are completely free to do so. You are more than welcome to do both of course. In the image below you can see an example of how money that has been donated to the Stride collective, has been partially allocated to a specific project.What's Next? 🔗We first want to see how this first month of the new platform goes. At the end of November/beginning December we will hold a new community meeting and we will discuss how things went and how we plan on distributing the donations.There are also some remaining tasks regarding the Open Collective that will be taken care of in the weeks to come:Setup webhook to DiscordSetup webhook to TwitterFully automate the website to show sponsorsFully automate the Github backers.md file with sponsorsWrite up blog on the entire process on how we spend moneyAdd open collective to sponsors.yaml on github"
  },{
    
    "title":"Community Meeting October 2021",
    "excerpt": " It has been quite a while since we had a community meeting with the Stride community. On the 1st of October 2021 we had a good 2 hour chat...",
    "author": "Jorn Theunissen",
    "date": "October 01, 2021",
    "category": "",
    "tags": "blog, search, Meeting",
    "url":"https://stride3d.net/blog/community-meeting-october-2021/",
    "content":"It has been quite a while since we had a community meeting with the Stride community. On the 1st of October 2021 we had a good 2 hour chat about various topics on the Stride game engine.Summary 🔗Summary Access Rights Roadmap Funding Stride 4.1 Remaining Topics Access Rights 🔗First topic was about clearing up access rights of the Stride source contributors and how this can be displayed better to the rest of the world.Github features a teams option, which is now free for open source projects. Xen2 made sure that those contributing to the engine are now part of the team on Github: https://github.com/orgs/stride3d/teams/stride-contributors. These contributors can review and approve pull requests in to the various stride projects (engine, website, documentation).When changes are merged into the website project and specifically the 'release' branch, an automated process will trigger the website deployment.Documentation is updated as well, although this is a manual process that needs to be triggered. Xen2 and Aggror will do some knowledge sharing in private, so that this process does not lie solely with xen2.Social media accessYoutube: xen2 and AggrorFacebook: xen2 and M0THTwitter: xen2 and AggrorRoadmap 🔗The roadmap on Github hasn't received an update in quite a while. The reason for this is that there simply is no capacity to pick up these kind of features like terrain editor, visual programming etc.What we see in the community is that various contributors work on useful features for their own games, and as a result these kind of features and bug fixes and up being merged in to the Stride repository.As a result it has now been decided that we no longer will use the roadmap on Github. At the moment of writing this blog, the roadmap has already been removed. If, in the future, we have more funding and capacity, we can re-introduce it again.Aggror will try to put out a blogpost once a month keeping the community up to date on features that community members are working on. This also requires some initiative from the community. So if you have something that you are working on, feel free to send a message to Aggror on Discord. That we can feature your screenshots, videos, PR's in a blogpost on the stride website.Funding 🔗There were 2 ways to contribute to Stride financially: Patreon and Xen2 sponsorship on his Github account.Both these donation services didn’t really give a clear overview where the money was being spent on.Sponsoring Xen2 on Github would specifically and only go to Xen2. On top of that there is no easy way to use this as a marketing tool.Only Xen2 had access to Patreon, making it another responsibility for him to:Post something interesting on Patreon (for which he has no time)Do tax related activities and payments.Because of the above, Stride's Patreon page will soon close (or already might be at the time of posting blog)Aggror will look into setting up a more open way of viewing where money from donations is being spent on. The idea here is to have a look at Open CollectiveAggror will present his findings to xen2. Once a decision has been made, the community will be informed..NET foundationStride has joined the .NET foundation. The .NET foundation offers to host various services on their Azure subscriptions. That means that a majority of the costs when it comes to hosting is taken care of for us.As a result of this, Xen will move various services from Digital ocean to Azure. This will reduce costs. Money that is gained from donations can be spent on bug bounties, features and documentation. Once we have a new donation mechanism in place, we will have another community meeting on how to distribute money.Aggror will also be included in the communication with .Net foundation.Xen2 gave a nice summary on the operating costs for various (web related)servicesAzure: used to be $50~$100 per month but now paid by .NET FoundationStackPath (CDN): $10 per month, can be moved to AzureGoogle Cloud Service: $5 per monthDigitalOcean: $30 per month (teamcity and forums server), can be moved to AzureGitHub: $40 per monthSome demo's use LFS. If .NET foundation were to cover those costs too, we could add additional demo's.SSL: used to be expensive but now free (auto renew let's encrypt or Azure)Domains: cheap, $10 per yearApplying for a grant with Epic, Microsoft etc.Although this is something that we want to pursue, we first want to have a new donation service in place. The next community meeting will cover this topic again.Stride 4.1 🔗Stride 4.1 is on its way, but when exactly and what can we expect this year?Stride 4.1 BETA will include the upgrade to .NET 6Stride 4.1 targeted around november/december 2021Although full Linux support is not possible right now, we will look at having the Linux runtime working again with Stride 4.1Aggror will start collect info for the release notesRemaining Topics 🔗For the remaining topics, we ran out of time, so these will be picked up at another community meeting."
  },{
    
    "title":"Stride 4.0 is Now Live",
    "excerpt": " Stride 4.0 is now out of beta, and the Xenko game engine has been renamed to Stride. This release brings Voxel Cone Tracing GI, .NET 5 support, flexible GPU...",
    "author": "Virgile Bello",
    "date": "February 01, 2021",
    "category": "",
    "tags": "blog, search, 4.0, Release, Tutorials",
    "url":"https://stride3d.net/blog/release-stride-4-0/",
    "content":"Stride 4.0 is now out of beta, and the Xenko game engine has been renamed to Stride. This release brings Voxel Cone Tracing GI, .NET 5 support, flexible GPU instancing, Vulkan improvements, and new documentation and tutorials. The Stride team is also welcoming new developers to contribute to the engine's development.Stride 4.0 has been around for a while, but it's now time to remove the -beta tag!Many thanks to the community and all the contributors who made this release possible!Summary 🔗Summary Xenko is now Stride! Voxel Cone Tracing GI .NET 5 Flexible GPU Instancing Graphics API: Different Selection Mechanism + Vulkan Improvements Documentation &amp; Tutorials New Developers are Welcome! Xenko is now Stride! 🔗The Xenko game engine has been renamed to Stride. From now on, all source code, blogs, and tutorials will use the name ‘Stride’ instead of ‘Xenko’.Here is the new logo:More details available on the dedicated blog post.Voxel Cone Tracing GI 🔗Thanks to a substantial contribution from Sean Boettger and sponsored by David Jeske, Stride now supports Voxel Cone Tracing GI!Here it is in action:As you can see, there are many customizations and settings available in the editor:There's a documentation page explaining how to set up the project with Voxel Cone Tracing GI.Here's the original forum post and pull request. Thanks again for this great contribution!.NET 5 🔗Stride editor and toolchain is now running with .NET 5! Runtime has been working with .NET Core for a few versions already.This allows us to have scripts and custom assets in a project targetting .NET Standard 2.1 or .NET 5.If you have scripts or custom assets in a .NET Framework project rather than a .NET Standard project, you can still choose between .NET 5 and .NET Framework within the launcher:The framework will also be displayed in the Game Studio toolbar for easier identification while both coexist..NET Framework version can be considered deprecated and will likely be removed in a future release (likely 4.1) to allow us to take full advantage of C# 8.0 and soon-to-come C# 9.0.We also expect dropping .NET Framework and supporting only .NET 5 will greatly simplify our installation process since we won't depend on specific workloads or packages of Visual Studio being installed anymore. This was a recurring issue with our users.Flexible GPU Instancing 🔗Aka geometry instancing. Thanks to another big community contribution sponsored by vvvv, Stride now supports GPU instancing per model.The nice thing about it is, that it plays together with the entity-component system: Simply add an Instancing component to an entity with a model. Then you can choose between 3 ways of how you generate the instances:EntityTransform, uses the transformation of other entities with an Instance component. This allows you to add components like physics, audio, etc. to each instance.UserArray, for providing an array of matrices via scriptUserBuffer, for providing a structured buffer (GPU resource) of matrices via scriptUserArray and UserBuffer even allow you to specify how the matrix is multiplied with the parent transformation.It even works with skinning:Picking individual instances in Game Studio works as well and selects the entity with the respective Instance component.There are also two new entity templates for easy setup:An example project that shows the new features can be found here: StrideTransformationInstancingGraphics API: Different Selection Mechanism + Vulkan Improvements 🔗There's been a big overhaul on Stride build system to make Graphics API selection work in a more future-proof way.It was previously relying on the custom RuntimeIdentifier being set in the solution. This didn't work very well because it was completely orthogonal to the existing RuntimeIdentifier, and sometimes not having good fallbacks.From now on, the user project will use StrideGraphicsApi in the .csproj project file to specify the graphics API. We hope to expose this in the editor later.We also took the opportunity to improve the state of Vulkan renderer (thanks to a switch to Vortice.Vulkan bindings from Amer Koleci) and automatize graphics unit tests, currently running for D3D11 and Vulkan.It's still a work in progress so expect more in future releases.Documentation &amp; Tutorials 🔗The first 10 C# beginner tutorials are recorded and uploaded to the official Stride Youtube channel. You check out the playlist here.These videos are the video equivalent of the existing online documentation for the C# beginner template tutorials and the 'new project' template when creating a new project from the Stride launcher.The C# beginner series should be fully recorded by the end of July 2020.After those videos are done, Jorn will put his focus on the C# Intermediate project template. Here a is work in progress screenshot on the raycasting tutorial:New Developers are Welcome! 🔗The Stride GitHub repository has more closed pull requests than open issues. This is a good sign! But in order to move faster and adapt to new technologies, we would be very happy to see more new talents in our friendly and professional developer community.There are several good reasons to join us:Writing engine code in C# is fun and quite productiveStride users will work with what you createWe are happy to help, should you get stuckYou can learn a lot, the Stride code base is very professional and has high-quality standardsAn open-source contribution is a great addition to your portfolioNo matter whether you (or someone you know) can contribute documentation updates, UI improvements, bug fixes, or new rendering technologies, we welcome everyone!"
  },{
    
    "title":"VL.Stride Released by vvvv",
    "excerpt": " We're excited to announce that vvvv has released a new 3D engine for vvvv, our visual live-programming environment for .NET. Named \"VL.Stride,\" it is essentially a wrapper around the...",
    "author": "vvvv",
    "date": "October 02, 2020",
    "category": "",
    "tags": "blog, search, Announcement",
    "url":"https://stride3d.net/blog/vvvv-releases-VL.Stride/",
    "content":"We're excited to announce that vvvv has released a new 3D engine for vvvv, our visual live-programming environment for .NET. Named &quot;VL.Stride,&quot; it is essentially a wrapper around the Stride engine and can be used independently from the Stride Game Studio.Read more about the release and its details in this release blog post.Note that vvvv's focus is not on creating games but rather on creative coding and interaction design style of applications. But due to its live-programming nature, using a state hot-reload approach, it may still be interesting for you to quickly prototype some functionality for your games. Also vvvv can help you explore all the different parts of the Stride engine and understand how they work together. Being able to touch all parts while they are running, allows to get an overview faster than just going through Stride's documentation.We'd like to invite you to play with it and hear your feedback. vvvv is free for non-commercial use, no strings attached. So please just go ahead, download vvvv gamma 2020.3-preview and let us know what you think!NODE20 🔗If you're already convinced and want to learn more about vvvv, join us for 30 online workshops covering various topics, we're running during the NODE20 - Forum for Digital Arts from October 3rd to 8th.To give you an idea, the following workshops will be using VL.Stride:Introduction to vvvv, VideoFX &amp; CompositingRealtime graphics with Stride 3D – The FundamentalsPatching MaterialsBeyond Sound and VisualVL.Stride DeepdiveA preview to ShaderFXWorking with the Stride GameStudioAs you can see, with vvvv we're quite invested in Stride. We bow before everyone who helped to make it what it is today and want to do our best to contribute our share to give it a bright future.Yours, vvvv."
  },{
    
    "title":"Community Meeting May 2020",
    "excerpt": " On May the 8th we held another community meeting in the Discord. Its main goal was to talk about the ongoing work on Stride and its first official release...",
    "author": "Jorn Theunissen",
    "date": "May 08, 2020",
    "category": "",
    "tags": "blog, search, Meeting",
    "url":"https://stride3d.net/blog/community-meeting-3/",
    "content":"On May the 8th we held another community meeting in the Discord. Its main goal was to talk about the ongoing work on Stride and its first official release after the rename to Stride.Summary VVVV and VL.Stride Sponsoring and gold members Links Summary 🔗Official Stride 4.0 release. The plan is to release Stride 4.0 officially within the next 2 weeks. It depends a little on whether .Net 3.1 is going to be part of it. If this can be done within reasonable time than we rather incorporate this into the official release of 4.0The release notes will be written in a more friendly way.Aggror will look into making a video regarding the release as well as some of the new key features like VXGI cone tracing.Xen2 has filled in the application for joining the .NET Foundation, a non-profit organization (NPO). At the moment of writing this blog, no response to this yet.Roadmap The GitHub roadmap will be updated. From now on it will only contain features that Xen2 or others will actively work on. This means some epics will be removed from the roadmap, and some new ones will be added. The epics that are removed will still be visible as requests in Github issues.There is now a stride tag on gamedev.stackexchange (tag might be changed to stride-engine soon btw). We can use this site for Q&amp;A and additional &quot;How to? questions. https://gamedev.stackexchange.com/questions/tagged/strideDocumentationRecording of C# beginner video tutorials is ongoing. Videos are listed on the official Stride Youtube account. Basically, every page will have an accompanying video. The playlist is being updated on the go.Started making the C# intermediate tutorial section.Continuation of the editor video tutorials once the programming tutorials are up to speed again.Some people showed interest in working on a community showcase demo for Stride. A new discord channel #showcasing-team was created.VVVV and VL.Stride 🔗User Tebjan explained some more about VVVV and VL.Stride.Here is a short overview of what we at vvvv are doing and will release somewhen this year:What is vvvv gamma?vvvv gamma is a live programming environment for .NETVL is our visual programming language that works with every .NET assemblyDevelopment, compilation and state hot-reload at runtime, we believe this is the future of software developmentYou can see the data while you developCan export .NET executablesMore info and download at: visualprogramming.netWhat is VL.Stride?Stride will be our 3d rendering library of choiceWe are working on making the Stride features available as convenient nodes in vvvv gammaHigh-Level nodes for: Mainloop, Windowing, Scene Graph, Materials, Models, Textures, etc.Low-Level nodes for: Drawing API, Visual Shaders, Vector Math, etc.Load a Stride project at runtime and use all content of itYou can see dev captures at: vl-xenko-3d-engine-update-3We actively support the Stride open-source community and financially support the Stride development: vvvv-meets-xenkoSponsoring and gold members 🔗We welcome our new gold sponsor David Jeske. We would also like to thank him for contributing the work on VXGI last year. He is using Stride for one of his projects.OUTDATED: As off November 2021, we will use Open collective.Also, a friendly reminder, that if you sponsor Stride through Github, the reward is doubled by Github.You can also still sponsor through Patreon.Links 🔗In case you missed them, here are the new links that you should be using:Github: https://github.com/stride3d/strideWebsite: https://stride3d.net/Documentation: https://doc.stride3d.net/latest/en/manual/Twitter: https://twitter.com/stridedotnetYoutube: https://www.youtube.com/@Stride3DIf you have any further questions, feel free to reach out on Discord or the forum."
  },{
    
    "title":"Xenko Has Been Renamed to Stride",
    "excerpt": " The Xenko game engine has been renamed to Stride. From now on, all source code, blogs and tutorials will use the name 'Stride' instead of 'Xenko'. ",
    "author": "Jorn Theunissen",
    "date": "April 20, 2020",
    "category": "",
    "tags": "blog, search, Announcement",
    "url":"https://stride3d.net/blog/xenko-has-been-renamed-to-stride/",
    "content":"The Xenko game engine has been renamed to Stride. From now on, all source code, blogs and tutorials will use the name 'Stride' instead of 'Xenko'.Why the name change? New Stride Logo What does this mean for you? What's next? Final Notes Why the name change? 🔗Changing product names always is a lot of work and comes with some downsides. However, we would not do this if there weren't any good reasons for us to do so. Since 2019, xen2, has been trying to affiliate Xenko with the .NET Foundation, a non-profit organization (NPO).There are various reasons for this:We wanted to let the community know that Xenko is completely and 100% free and open in its development. This also means that any donations should always be made 100% visible to the public. This also includes what and where the donation money is spent on. Joining the .NET Foundation would aid in visualizing how this money would be spent.Being able to tell possible investors/backers/companies that Xenko/Stride can be trusted. This can help with publicity and more funding.They also provide help for opensource projects in various areas.This sounded great, but unfortunately, there was a massive drawback to this: as long as the project kept the name 'Xenko' (trademarked by Silicon Studio), it would be difficult to transfer to the .NET Foundation. After a lot of back and forth between Silicon Studio legal department, xen2 and the .NET Foundation, we didn't get any step closer to achieving our goals.After several months without progress, we started to suggest the idea of a rename to the community. In the Discord server, we opened up the name change and logo suggestions to see how people would react and what their suggestions would be.About 6 months later, several polls, logo proposal and a lot of brainstorming, we settled for the name: Stride.New Stride Logo 🔗The new Stride logo, designed by sebl (from schnellebuntebilder), was chosen after a process managed by Eideren consisting of several community votes. Also, tebjan is the one that came up with the name Stride. Many thanks to them, as well as to all the other people involved!Without further ado, here it is:Game Studio will use a red variant:What does this mean for you? 🔗The Xenko launcher will ask to install Stride launcher.Stride will be available starting from version 4.0 (available shortly). This rename also applies to all websites, social media and documentation. It is possible that the name Xenko or its logo might still be drifting around somewhere in a screenshot here and there, but those will eventually be removed.Stride 4.0 can opens Xenko 3.1 projects and convert them automatically. Please don't forget to properly backup your projects, and report any issues you have during the automatic upgrade process.What's next? 🔗Release Stride 4.0 within the next few daysA new application to join the .NET FoundationA new effort to find new backersThe new Youtube channel will be the new hub for video tutorials. We will start with recording videos for the C# beginner section. After that, we will look at new editor video tutorials and extend the C# tutorials.Here are the new links that you should be using:Github: https://github.com/stride3d/strideWebsite: https://stride3d.net/Documentation: https://doc.stride3d.net/latest/en/manual/Twitter: https://twitter.com/stridedotnetYoutube: https://www.youtube.com/@Stride3DFinal Notes 🔗We would like to thank each and everyone involved in the long process of picking a new name, a new logo and other related media/art. A huge shoutout to xen2 for doing the renaming process."
  },{
    
    "title":"Recap January 2020",
    "excerpt": " Stride is changing its logo due to similarity concerns with substance/adobe's logo. The community is invited to submit new designs for the Stride logo. Meanwhile, the 3.2 release is...",
    "author": "Jorn Theunissen",
    "date": "February 03, 2020",
    "category": "",
    "tags": "blog, search, Meeting",
    "url":"https://stride3d.net/blog/january-2020-recap/",
    "content":"Stride is changing its logo due to similarity concerns with substance/adobe's logo. The community is invited to submit new designs for the Stride logo. Meanwhile, the 3.2 release is approaching, and the engine's rename to Stride will follow. Check out the community projects BanditRevolver and AggrorJorn for inspiration.A New Logo for Stride 3.2 Release Community Picks Project Draco from BanditRevolver Rollerghoaster from AggrorJorn A New Logo for Stride 🔗We decided to contact substance/adobe at the start of January after seeing that many people felt that the most voted community logo for Stride was too close to theirs. We received a reply from their legal team which, of course, told us that we would need to change it. It's the legal team, playing it safe is part of their job. They also told us that we could get in touch with their design team, we took that opportunity and sent multiple emails but they never got back to us.Proposals are open again so if you think you have a logo that would fit with our new name (Stride), please fill in the picture attached below with your design. There’s also the Figma project 6 if you would rather work on that. For more information see the forum post.3.2 Release 🔗We are getting close to the 3.2 release. We hope to share some info on that soon. In the mean time we are also getting ready for the rename to Stride. This will happen after the 3.2 release.Community Picks 🔗Check out these community projects that people are working on: BanditRevolver and AggrorJorn.Project Draco from BanditRevolver 🔗 Rollerghoaster from AggrorJorn 🔗"
  },{
    
    "title":"Recap December 2019",
    "excerpt": " Happy new year everybody. In this blog we do a quick recap of the final developments of Xenko in 2019 and what the community has been up to. ...",
    "author": "Jorn Theunissen",
    "date": "December 31, 2019",
    "category": "",
    "tags": "blog, search, Meeting",
    "url":"https://stride3d.net/blog/december-2019/",
    "content":"Happy new year everybody. In this blog we do a quick recap of the final developments of Xenko in 2019 and what the community has been up to.What is being worked on? 🔗The latest new features are being finished for the release of 3.2. This version should be released near the end of January.Community Meeting 3 🔗On December 18th we held another community meeting. Check here for the summary. The most important thing here is that we are getting ready for the rename.Stride Logo 🔗With 'Stride' being the new name for Xenko in the near future, the #logo-change Discord channel has been seeing a lot of suggestions and even a voting on some of the ideas from the community.Community Picks 🔗Check out these awesome projects that community members have been working on:Testing Xenko by MentalArray 🔗Testing the Xenko game engine took only a week to do this that included learning the scripting system and all model building and texturing was really trying to figure out animations and happy with resultFog of war from Jarmo 🔗This is a fog of war system written for Xenko.Github project"
  },{
    
    "title":"Community Meeting December 2019",
    "excerpt": " On December the 18th we held a community meeting in the Discord. Its main goal was to talk about the logo, roadmap and ongoing work on Stride. ",
    "author": "Jorn Theunissen",
    "date": "December 18, 2019",
    "category": "",
    "tags": "blog, search, Meeting",
    "url":"https://stride3d.net/blog/community-meeting-december-2019/",
    "content":"On December the 18th we held a community meeting in the Discord. Its main goal was to talk about the logo, roadmap and ongoing work on Stride.Final Stride logo deadline: 22 december 2019With the current amount of developers and resources, larger features like features are simply not possible. Features like cross-platform support, Visual studio Code, rebuilding the editor for Linux, Terrain and vegetation.If you have any programming skills and want to help out, have a look at the issues on github.Roadmap 3.2 - Estimated by end of January 2020New feature: Url ReferenceNew feature: HeightField property(optional) Debug Drawing(optional) LOD scriptRoadmap 4.0This version will cover the rename of Xenko to Stride.Activating the first social media accounts.Joining the .NET foundation to become an NPO.Git/Patreon donations will have to be evaluated depending on NPO requirements.Contacting Microsoft/Partners for support/sponsorship."
  },{
    
    "title":"Xenko 3.1 Released",
    "excerpt": " It took some time to stabilize everything with the new Xenko packages, but we now feel confident enough to release Xenko 3.1! ",
    "author": "Virgile Bello",
    "date": "November 11, 2019",
    "category": "",
    "tags": "blog, search, Release, Tutorials",
    "url":"https://stride3d.net/blog/release-xenko-3-1-0/",
    "content":"It took some time to stabilize everything with the new Xenko packages, but we now feel confident enough to release Xenko 3.1!Highlights Community Xenko 3.1 Loves NuGet! Package layout: following best NuGet practices Xenko assets are also distributed as part of package Xenko Packages are now distributed on nuget.org Xenko tooling resolves assemblies dynamically using NuGet API Future: plugin support for editor Full switch to .NET Standard Tutorials BulletSharp update Changelog Highlights 🔗One of the major change is turning the engine into modular NuGet packages, published on NuGet.org.Please note that Visual Studio 2017 is not supported anymore, please upgrade to 2019.Community 🔗Many thanks to the community and all the contributors who made this release possible: aggror, Eideren, alexb910, comradekingu, flabbie, CharlesWoodhill, Artaki, indigozero, dfkeenan, dominikjancik, erictuvesson, Hyperpred, louies0623, Lucifer2031, Ethereal77, mostafa901, Kryptos-FR, shinkitsunemaru, phr00t, Polymo, profan, xendez, Scorp-121, SleepyMode, tebjan, xen2, WhyPenguins, OoElectron, joreg, meriaizen86, rgawry, SantosSi, xwellingtonx, SilentCLD, HoSeCoin, Swann Martinet, WaldiS and pansan.Xenko 3.1 Loves NuGet! 🔗Xenko was always a big proponent of NuGet: since first version, Xenko was distributed as a NuGet package.However, due to limitations (hello packages.config and project.json!), we were leveraging NuGet more as a distribution medium than proper NuGet packages: Xenko 3.0 is still a monolithic single package and it would not work out of the box when referenced from Visual Studio without using Xenko Launcher and Game Studio.Xenko 3.0 paved the way by making Xenko compatible with the new project system (game projects were referencing Xenko using a PackageReference).Today, Xenko 3.1 brings Xenko as a set of smaller NuGet package, each containing one assembly, with proper dependencies:As a result, it is now possible to create a game project that references only the packages you want. Here are a few examples of &quot;core&quot; packages:Xenko.Engine: allows you to use core engine runtime (including its dependencies)Xenko.Core.Assets.CompilerApp: compile assets at build timeXenko.Core.Mathematics or Xenko.Graphics: yes, if you want to make a custom project only using Xenko mathematics or graphics API without the full Xenko engine, you can!Xenko.Core.Assets, Xenko.Presentation or Xenko.Quantum: all those piece of tech being used to build Xenko tooling are also available for reuse in other projects. Nothing prevents you from generating assets on the fly too!Then, various parts of the engine are distributed as optional packages:Xenko.PhysicsXenko.ParticlesXenko.UIXenko.SpriteStudioXenko.VideoIf you don't reference those packages, they won't be packaged with your game either. In many situations, it will result in a smaller packaged game and improved startup time.Also, you will be free to replace those functionalities with alternative libraries.Package layout: following best NuGet practices 🔗Previously Xenko references were added to the project using custom targets.New packages are now be layout as NuGet/Visual Studio expects them, in folders like lib/net45 and lib/monodroid10.We still have a few custom MSBuild targets but reduced them to minimum.Xenko assets are also distributed as part of package 🔗NuGet packages have a xenko folder containing Xenko assets. As a result, user are able to generate nuget package containing Xenko assets out of the box from Visual Studio and publish them on NuGet for general consumption.Xenko Packages are now distributed on nuget.org 🔗With all those changes, it makes sense to stop distributing Xenko on our custom nuget server and use nuget.org instead.This will greatly reduce friction to try Xenko (any project would work out of the box in Visual Studio). This might also make our launcher completely optional in the long run.Xenko tooling resolves assemblies dynamically using NuGet API 🔗Tools such as GameStudio or Asset Compiler are distributed as NuGet packages. However, it won't bundle Xenko Runtime, which will simply be encoded as dependency.When running those tools, they are resolving Xenko runtime assemblies directly in the NuGet cache.This allows for distributing those tools as very small and easy-to-upgrade packages, avoiding file duplications. This is similar to what dotnet-cli is doing with deps file.This brings lot of technical challenges but should allow us in the future to be more flexible in the future to load the exact runtime and plugins that the user project reference rather than the one hardcoded with the tool.Future: plugin support for editor 🔗Xenko 3.1 editor will still be monolithic: editor support for UI, SpriteStudio, Video and other optional modules will be hardcoded.However, the target is to get rid of them as soon as possible, and treat them as what they are: plugins.Full switch to .NET Standard 🔗Xenko supports .NET Standard for most of its runtime assemblies.Xenko games can run on .NET Core for both Windows and Linux.Tutorials 🔗Xenko now has a tutorial section in the documentation!The first project “C# Beginner”, demonstrates 12 beginner programming concepts.Users will be able to select the tutorial template when creating a new Xenko project to practice and experiment with the code.Additionally, the code used in the project is directly referenced by the new documentation section which explains each individual tutorial level.The amount of tutorials, as well as intermediate and advanced tutorials, will be extended/added from now on.BulletSharp update 🔗Eideren worked on updating our old custom modified version of BulletSharp (the wrapper library we use for our physics engine).Things should be much easier to maintain from now on.Changelog 🔗This release also contains numerous improvements, bugfixes and new translations.Here is the full changelog in all its glory:Alex (1):Fixed spelling error in Quaternion.cs view commitAllan Nordhøy (9):Added translation using Weblate (Norwegian Bokmål) view commitAdded translation using Weblate (Norwegian Bokmål) view commitAdded translation using Weblate (Norwegian Bokmål) view commitAdded translation using Weblate (Norwegian Bokmål) view commitTranslated using Weblate (Norwegian Bokmål) view commitTranslated using Weblate (Norwegian Bokmål) view commitTranslated using Weblate (Norwegian Bokmål) view commitTranslated using Weblate (Norwegian Bokmål) view commitTranslated using Weblate (Norwegian Bokmål) view commitAndrea Aruta (6):Added translation using Weblate (Italian) view commitAdded translation using Weblate (Italian) view commitAdded translation using Weblate (Italian) view commitTranslated using Weblate (Italian) view commitTranslated using Weblate (Italian) view commitTranslated using Weblate (Italian) view commitCharles Woodhill (1):[UI/INPUT] Expose mouseOverElement view commitChristian Georgiev (2):Added translation using Weblate (Macedonian) view commitTranslated using Weblate (Macedonian) view commitCody Lee (4):Added issue templates for bugs and feature requests (#327) view commitMoved pull_request_template.md to correct location view commitRemoved any pluralization of the word question in the question_request.md for consistency view commitUpdated CONTRIBUTING.md and added a 'submitting changes' section view commitDaniel Keenan (2):Change the ObjectToTypeName value converter to give prettier C# names. (#400) view commit[GameStudio] Improve &quot;Add component&quot; button usability. (#411) view commitDominik Jančík (6):Initial SDL Finger Multitouch support view commitRemoved lastCtrl field view commitFingerSDL GUID view commitFingerSDL PointerID generator view commitRenamed FingerSDL to PointerSDL view commitSDL Touch&gt;Mouse synth. disabled when PointerSDL is used view commitEideren (55):Include nuget to proj view commitStraightforward changes view commitPotentially harmful changes view commitMinor proj update view commitMatrix conversion fix view commitMain conversion done, next up the rest of the CharacterComponent view commitCharacter component, waiting on bullet wrapper for the rest view commitStatic mesh base view commitStatic Mesh: Update shape factories view commit[Core] ThreadPool: shutdown idle threads (#302) view commit[Samples] Misc camera controller fixes (#359) view commitFix for #422 view commitRevert nugget view commit[Bullet] Update libs view commit[Bullet] Update projects mapping view commit[Bullet] Remove bullet refs within mathematics view commitMerge branch 'master' into bulletsharp_nuget view commit[Bullet] Rely on our bullet for math conversions view commit[Bullet] Finish height field mappings view commit[Physics] Remove unused enum and previous namespace import for inlining view commit[Bullet] Update all platforms to latest libs view commit[Physics] Reduced physics test allocations (#443), cleaned up Simulation view commit[Physics] Implement ignore collision between two specific components view commit[Physics] In-editor static mesh collider view commit[Physics] Avoid duplicate allocations for colliders based on models view commit[Physics] Fix initial collider scaling view commit[Misc] Exception prone basic functions view commit[Transform] Deal with ChildrenCollection todo view commitMerge branch 'master' into bulletsharp_nuget view commit[Physics] Use asset cloner for shape desc view commitMerge remote-tracking branch 'origin/master' into bulletsharp_nuget view commit[Physics] Replace ColliderShapes' TrackingCollection view commit[Physics] Replace Rigidbody's hacky delegate usage view commit[Physics] Rollback unused serialization workaround view commit[Physics] Cleanup RigidbodyComponent view commit[Physics] Clarify comments in StaticMeshColliderShape view commit[Physics] Fix #463 view commit[Physics] Fix very large meshes throwing view commit[Physics] Expose Capsule's readonly data view commit[Physics] Provide read access to collider shape's data view commit[Physics] Split static mesh collider into new PR view commit[Physics] Fix ShapeSweeps output view commit[Physics] Provide public access to callbacks' recycle and buffer view commit[Physics] Clarify bullet lib's usage and sources view commit[Editor] Fix orbit editor camera stutter view commit[Editor] Re-order code execution view commit[SceneManagement] Assign Entity.sceneValue before firing events view commit[Camera] Fix processor's cameraSlotsDirty not being reset after process view commit[SceneManagement] Fix loop skipping items when collection is modified view commitAvoid unnecessary alloc view commitDeal with Add(), sub-optimal implementation view commit[Threading] ThreadPool refactor, reduce allocation, fix wrong argument view commitMove PooledDelegateHelper outside lock view commitSwap task factory view commit[GameSystems] Fix removing systems not clearing it from update and draw view commitEric Tuvesson (1):Assets Compiler Support MSBuild Toolset Version 16.0 (#421) (fixes #420) view commitFélix Dion-Robidoux (1):Update BACKERS.md view commitHyperpred (1):Remove cast to Game in AudioSystem (#472) view commitJarrett Robertson (1):Fixed issue with scene instance using the wrong collection in for loop count view commitLouies (10):Added translation using Weblate (Chinese (Traditional)) view commitAdded translation using Weblate (Chinese (Traditional)) view commitAdded translation using Weblate (Chinese (Traditional)) view commitAdded translation using Weblate (Chinese (Traditional)) view commitTranslated using Weblate (Chinese (Traditional)) view commitTranslated using Weblate (Chinese (Traditional)) view commitTranslated using Weblate (Chinese (Traditional)) view commitTranslated using Weblate (Chinese (Traditional)) view commitTranslated using Weblate (Chinese (Traditional)) view commitTranslated using Weblate (Chinese (Traditional)) view commitLucifer (8):Added translation using Weblate (Chinese (Simplified)) view commitAdded translation using Weblate (Chinese (Simplified)) view commitAdded translation using Weblate (Chinese (Simplified)) view commitAdded translation using Weblate (Chinese (Simplified)) view commitTranslated using Weblate (Chinese (Simplified)) view commitTranslated using Weblate (Chinese (Simplified)) view commitTranslated using Weblate (Chinese (Simplified)) view commitTranslated using Weblate (Chinese (Simplified)) view commitMario Guerra (10):Translated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitMoustafa khalil (1):Update README.md view commitNicolas Musset (10):[Localization] Update extraction script view commit[Localization] Update extracted strings view commit[Localization] Update Japanese view commit[Localization] Add French view commit[Build] Update solution and project view commit[Localization] Fix build for path containing spaces (#381) view commit[Presentation] Bugfix/int3 editor (#387) (fixes #383) view commit[General] Simplify editor and presentation project files view commit[General] Fixup rule for .xaml.cs files view commitUpdate .gitattributes view commitOscar Sanchez (9):Translated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitPhr00t (2):[Graphics] Vulkan: add support for R10G10B10A2_UNorm and R11G11B10_Float view commit[Input] Fix mouse VirtualButtons view commitPolymo (1):Translated using Weblate (German) view commitRobin Hübner (2):[Physics] correct userdoc for convex hull collider parameters. (#382) (fixes #372) view commitMake SDL window user resizable. view commitRui Mendes (3):Added translation using Weblate (Portuguese) view commitAdded translation using Weblate (Portuguese (Brazil)) view commitTranslated using Weblate (Portuguese) view commitScorp-121 (4):Added translation using Weblate (Russian) view commitAdded translation using Weblate (Russian) view commitAdded translation using Weblate (Russian) view commitAdded translation using Weblate (Russian) view commitScorp121 (10):Translated using Weblate (Russian) view commitTranslated using Weblate (Russian) view commitTranslated using Weblate (Russian) view commitTranslated using Weblate (Russian) view commitTranslated using Weblate (Russian) view commitTranslated using Weblate (Russian) view commitTranslated using Weblate (Russian) view commitTranslated using Weblate (Russian) view commitTranslated using Weblate (Russian) view commitTranslated using Weblate (Russian) view commitSleepyMode (1):[Mathematics] Fixes for Color/ColorRGBA float/byte mismatches (#258) (fixes #251) view commitSwann Martinet (2):Translated using Weblate (French) view commitTranslated using Weblate (French) view commitTebjan Halm (6):Quick fix as suggested by @xen2 in chat to avoid crash in shader compiler (#343) view commitAdded translation using Weblate (German) view commitTranslated using Weblate (German) view commitResetting shader key scope for multi pass materials (#456) view commitadded xenko-community-project to README.md (#514) view commitFix DataBaseFileProvider cast (#538) view commitVirgile Bello (510):[Design] VisualStudio.Project doesn't need a reference to Solution anymore view commit[Assets] Package can now also represent a csproj + package (only new game creation is working) view commit[Assets] Removed AssetItem.SourceProject view commit[Assets] Move assets to Assets folder for now view commit[Assets] Fix project loading view commit[Assets] Simplified Package.Profiles into Package.Profile view commit[Assets] Removed PackageProfile.ProjectReferences view commit[Assets] Removed PackageProfile.Name view commit[Assets] Allow creation of samples (as long as they don't use external packages) view commit[Assets] Added the concept of Package container (project or standalone) view commit[Assets] Turned Session.Packages into a readonly collection view commit[Assets] Properly process dependency graph using remote info to perform package upgrades before downloading nuget packages view commit[Assets] Removed LocalDependencies and fixed TemplateSampleGenerator view commit[Assets] Fix platform update view commit[Assets] AssetCompiler now works against .csproj view commit[Assets] Fixed asset compiler get-graphics-platform view commit[Assets] Fix view models to allow selection as current project view commit[Assets] Properly regenerate platforms for sample templates view commit[Assets] Ignore assets from executable projects (computed automatically) view commit[Templates] Moved template packs assets from Assets/Shared to Assets view commit[Assets] NewGameTemplateGenerator: assets were loaded twice, resulting in issues later with cloned AssetItem (fix asset packs) view commit[Templates] Simplify platform projects view commit[Templates] Moved templates packges asset folders from Assets/Shared to Assets and removed intermediate solution folders view commit[Assets] Adjust PackageProfile.ResourceFolders during package upgrade view commit[Templates] Sample Templates now works (asset packs are now ProjectReference and their assets are properly copied during template generation) view commit[Assets] Properly get namespace from project view commit[Assets] Fix CodeViewModel to use ProjectCodeViewModel view commit[Assets] Fix platform updates view commit[Assets] Rearranged templates for the new xkpkg = csproj change (note: project delete is broken) view commit[Assets] Package.Profile is now properly deserialized by discarding default value view commit[Assets] Removed PackageProfile.Platform view commit[Build] Make sure Package.Id stays is in sync with .sln one view commit[Assets] Removed Package.Id view commit[Assets] Removed PackageProfile view commit[Assets] Stop adding default folders in Package ctor view commit[Assets] Reunified ProjectState and PackageState view commit[Assets] Moved Package.Save() to PackageContainer.Save() view commit[Assets] Avoid creating .xkpkg for projects without one in the first place (use implicit one instead) view commit[Assets] Rework package dependencies view commit[Assets] Also support loading sln with new csproj Guid view commit[Assets] Support Packing and consuming simple NuGet packages with Xenko assets view commit[Assets] New game template: set current project to Windows view commit[Assets] Simplified NuGet package restore (only happens during PreLoadPackageDependencies) view commit[Assets] Update Code library template to match others view commit[Targets] Stop using XenkoDir.cache file during build view commit[Build] Bump to 3.1.0.1 view commit[Assets] Store pendingPackageUpgrades in PackageSession view commitMerge remote-tracking branch 'origin/master' into onecsproj_onexkpkg2 view commitMerge branch 'master' into onecsproj_onexkpkg2 view commit[Assets] Process dependencies for RootAssets in view model view commit[Assets] Made !file and !directory tags mandatory in Yaml for easier dependency analysis view commit[Assets] Temporary fixes for root assets and default scene opening view commit[Assets] Pack assets using actual package data rather than hardcoded rules view commit[Build] Reorganize build system (WIP) view commit[Build] NuGetAssemblyResolver WIP view commit[Engine] Move default assets to individual assemblies rather than global Xenko.xkpkg view commit[Assets] Compiler: can now properly compile existing projects view commit[Launcher] Fix launcher build view commit[Editor] Temporarily moved game studio shaders to Engine, until we have proper design-time package references view commitMerge branch 'master-3.0' into onecsproj_onexkpkg2 view commit[Build] Use RuntimeIdentifier to separate graphics API runtimes view commit[Build] Improved cross compilation view commit[Build] Renamed XenkoRuntime into XenkoNETRuntime view commit[Build] Added XenkoRuntime flag view commit[Assets] project.Type evaluation needs to be done after package are restored view commit[Assets] Reorganized templates view commit[Assets] Fix package upgrader view commit[SpriteStudio] Added templates view commit[Assets] Properly find ffmpeg.exe and msdfgen.exe view commit[Assets] Move VHACD to Assets assembly and properly bundle C# wrapper view commit[Assets] Compiler: use thread-safe version of NuGet (when writing lock file) view commit[Deps] Switched to NuGet version of Xceed.Wpf.Toolkit/Datagrid/AvalonDock view commit[Build] Bump to .NET 4.7.2 view commit[Build] Adjust bindings for System libraries with 4.7.2 changes view commit[Deps] Xenko.Metrics and Xenko.CrashReport are now packaged with NuGet view commit[Build] Lot of adjustments for new NuGet resolver system (incl ConnectionRouter, VS Package, etc...) view commit[Samples] Moved samples from Xenko.Assets.Presentation to a dedicated project to have faster rebuild view commit[Assets] Some improvements so that unit tests can compile view commit[Assets] Some improvements so that unit tests can compile view commit[Build] Removed XenkoDir environment variable view commit[Assets] Fixed templates to have proper assembly names and namespaces view commit[Build] Readded support for UWP view commit[Build] Readded support for Android view commit[Build] Readded support for iOS view commit[Build] Optimized ProjectReferences view commit[Build] Check Visual C++ Runtime is properly installed as part of build targets view commit[Build] Added Xenko.PackageInstaller to Xenko.GameStudio view commit[Build] Use &quot;XenkoPlatforms&quot; to specify which platforms to build view commit[NuGet] Upgrade to 4.9 and use RestoreRunner to have faster noop restore on second run view commit[Tests] Fix build of some test projects view commit[Build] Also deletes .nupkg.metadata on package auto deploy (https://github.com/NuGet/Home/wiki/Nupkg-Metadata-File) view commit[Build] Make sure user projects are always built so that compiler app is checking assets again (until we feed &quot;fast up to date&quot; with proper inputs/outputs) view commit[Assets] Make sure to explicitly include Xenko.Core for its targets until VS2019 enables it by default (https://github.com/NuGet/Home/issues/6091[#](https://github.com/xenko3d/xenko/issues/)issuecomment-438073285) view commit[Assets] Don't include package targets when evaluating project files view commit[Assets] Order windows executable project first in solution files (sln) so that VS uses them as startup project by default view commit[Build] Added some docs related to new build system view commitMerge remote-tracking branch 'origin/master' into onecsproj_onexkpkg2 view commit[Build] Fix iOS solution view commit[Build] Moved PackAssets task in Xenko.Core.Tasks view commit[Build] Use PackAssets as an exe rather than a Tasks so that MSBuild doesn't lock the files (annoying when rebuilding) view commit[NuGet] Log everything view commit[NuGet] Restore inside assembly resolver to avoid deadlock and rewrote logging code view commit[Build] Only build default graphics platform when opeining sln unless we explicitly set XenkoGraphicsApiDependentBuildAll view commit[NuGet] Perform nuget resolve only for entry assembly view commit[Assets] Better resolution of project platform (needed so that windows project is auto selected) view commit[Build] Fix build when choosing a single graphics API view commit[NuGet] Add dev store before trying to restore packets view commit[Build] Removed Xenko.xkpkg view commit[Build] Moved PackageUpdateVersionTask to a separate assembly to simplify build view commit[Build] Unify version management in a single file (except for samples which will be versioned separately) view commitMerge remote-tracking branch 'origin/master-3.0' view commit[Build] Added package details view commit[Build] Output nupkg in bin\\packages view commit[Build] Xenko.Samples.Templates: add missing dependency view commit[NuGet] If restore failed, try to kill known blocking processes (Connection Router, CompilerApp, etc...) view commit[NuGet] Improve logging if restore failed view commit[Build] Remove non-existing files from Xenko.sln view commit[NuGet] Use SourceCacheContext to avoid ArgumentException view commit[Build] Sign dll/exe when building package view commit[Build] Also sign Launcher executables view commit[Build] Escape/Unescape XenkoPlatforms for properly passing info from Xenko.build to targets view commit[Build] Package build improvements view commit[Build] Package build improvements (part 2) view commit[Build] Signing tool was mistakently always enabled view commit[Build] Package build improvements (part 3) view commit[Setup] Update to Advanced Installer 15.5.1 view commit[Build] Remove invalid character from Xenko.build view commit[Build] Fix Linux Vulkan build view commit[Build] Added bin/packages/.gitignore file view commit[Build] Fix restore phase in Xenko.build view commit[Build] Removed Xenko.SamplesBootstrapper and fixed Xenko.Samples.Tests view commit[Samples] Fixed Xenko.Shaders.Tests view commit[Build] Use active build configuration rather than forcing Debug view commit[Build] Stop using Bin\\Windows for unit tests view commit[NuGet] Couldn't resolve EnvDTE.dll view commit[Assets] Don't try to load vcxproj as package view commit[Samples] PhysicsSample: Update for Vector3 Gravity view commit[Tests] Xenko.Assets.Tests: Don't compile assets view commit[Tests] Fixed some unit tests view commit[Tests] Fixed folder for gold image view commit[Launcher] Ignore server-side dev packages view commit[Assets] Fixed TestBasicPackageCreateSaveLoad view commit[Assets] Package upgrade is now working for 3.0 projects view commit[NuGet] Update to NuGet 4.9.1 view commit[Launcher] Ignore invalid NuGet sources (404, 401, etc...) view commit[VSPackage] Fix build of test project view commit[Launcher] Bump to 3.0.1 view commit[Assets] User can now create GameSettings freely (need to display warning if nothing matching expected name?) view commit[CompilerApp] Removed unused GetGraphicsPlatform code view commit[Build] Removed obsolete target files view commit[Build] Xenko.build now properly build Launcher view commit[Build] Switching unit tests to new targets view commit[VSPackage] Fix Xenko.build targets view commit[Build] Clean packages before full package build view commit[GameStudio] Asset editors close button is back view commit[Graphics] Removed PreferredGraphicsPlatform from RenderingSettings view commit[VSPackage] Fix build when using multiple XenkoPlatforms view commit[Build] Adjust package versioning so that NuGetVersion doesn't contain build metadata view commit[Native] Explicitly require related Assembly when loading native library (we can't use GetCallingAssembly as it might be wrong due to optimizations) view commit[Native] PreloadLibrary: Use type rather than assembly (to avoid use of GetTypeInfo() everywhere) view commit[GameStudio] About page: added markdown files to package view commit[Launcher] Few fixes so that launcher properly separate view commit[GameStudio] About page: display version with build metadata view commit[Build] Force cross-targeting if there is multiple RuntimeIdentifiers view commit[Launcher] Stay compatible with Xenko 1.x/2.x view commit[Build] Properly fix how RuntimeIdentifier is used for multi graphics API per platform view commit[Assets] Solution file was generated with empty DefaultVisualStudioVersion view commit[OpenTK] Use win7 runtime rather than win view commit[Assets] Made DefaultVisualStudioVersion public again view commit[Build] Properly forward XenkoGraphicsApiDependentBuildAll view commit[Build] Workaround: Remove RuntimeIdentifier from Solution references (https://github.com/onovotny/MSBuildSdkExtras/issues/139) view commit[Assets] Make sure solution/project path use backslashes view commit[Particles] Remove ambiguities in data member order view commit[Assets] Keep solution folders, just remove package info view commit[Assets] Improve package upgrade when there is no ProjectReference view commit[Samples] Updated samples view commit[Samples] Removed Xenko.Navigation where not needed view commit[Samples] Removed Xenko.Physics where not needed view commit[Assets] Make sure implicit packages have IsDirty set to false when loaded view commit[Assets] Fix asset upgrade view commit[GameStudio] Fixed template samples generator to work with updated project format view commit[Samples] Updated with 3.1 (step 2) view commit[Samples] Keep Xenko.Particles for now, until we have better extensibility in Graphics Compositor view commit[Assets] Allow some assets to be non-referenceable (asset name collision is allowed in this case because they exist only at compile-time). This is used for scripts, otherwise they can't have same name as an asset. view commit[Assets] PackAssets: skip excluded files view commit[Settings] Remove the !file when serializing setting keys view commit[Build] Package necessary WindowsAPICodePack assemblies with Xenko.Core.Presentation.Dialogs view commit[Build] XenkoPlatform was not properly set for Linux platforms view commit[Assets] PackageUpgrader: react to multiple package names (to support renames and/or package splits in multiple parts) view commit[GameStudio] Improve default asset selection to match opened asset editors view commit[Assets] Compiler: Move default asset build path to obj\\xenko\\assetbuild view commit[Build] Changed dev/beta versioning to permit upgrading between interleaved dev and beta releases (betaXX.YYYY format with XX = asset version and YYYY = git height) view commit[Build] Generate ref folder for all platforms (otherwise Android/iOS/UWP might fallback to ref/netstandard2.0 of Linux) view commit[Build] Fix Android build due to lack of NuGetRuntimeIdentifier view commit[Templates] Remove the _Game from sample templates view commit[Build] Adjust PackageVersion for sample templates according to XenkoOfficialBuild rather than XenkoPackageBuild view commitUpdated BACKERS.md view commit[Launcher] Display source in tooltip for Xenko downloads view commit[VSPackage] Various fixes so that shader highlighting/goto works view commit[Build] Updated UWP to use uap10.0.16299 view commit[UWP] Simplified some code (can now use Thread and other newer API) view commit[Build] Hide Microsoft.NETCore.UniversalWindowsPlatform from references and update build doc view commit[Build] Fix Xenko.Shaders.Tests name view commit[Assets] New Game template was not properly copying asset package files view commit[GameStudio] Use same build folder for game studio as for actual game build view commit[Templates] Fixed Linux template view commit[Templates] Fixed UWP template view commit[Build] Use win instead of win7 runtime identifier view commit[Templates] Additional fix for Linux template view commit[Templates] Linux: adjust default runtime identifier view commit[Launcher] Various fixes for downloading and error reporting view commit[Launcher] Bump to 3.0.4 (3.0.3 was built with incorrect source changes) view commit[VSPackage] Fix NuGet assembly resolve (avoid infinite loop) and handle properly non-Xenko solutions (fixes #298) view commit[Editor] Properly report solution load/save exception to log view commit[Reflection] Rewrote part of AssemblyContainer to handle deferred loading view commit[Build] Updated to MSBuild.Sdk.Extras version 1.6.65 (compatible with VS2019) view commit[Build] Use $(RoslynTargetsPath) rather than $(MSBuildBinPath)\\Roslyn (which doesn't work with VS2019) view commitChange link+badge for chat from gitter to discord view commit[Build] Use netstandard2.0 version of OpenTK view commit[Build] Switch to netstandard2.0 wherever possible for the runtime view commit[Build] Switch game projects to use netstandard2.0 view commit[Build] Fix Windows+Linux build view commit[Build] Hide Microsoft.NETCore.UniversalWindowsPlatform from references and update build doc view commit[Build] Fixed build of RenderDocPlugin view commit[Build] Additional fixes for single 3d graphics API build mode view commit[Templates] Patching of TargetFramework section is now forcing netstandard2.0 view commit[Templating] Switch to latest version of Mono.TextTemplating (t4) and add reference to netstandard view commit[Build] Various fixes for .NET Standard build view commit[Build] Bump Android SDK version from 5.0 to 8.1 (Google Play recent requirement for new app and .NET Standard 2.0 also requires 8.0+) view commit[Build] Force references to be added only for direct and explicit package references view commit[Build] Properly forward XenkoGraphicsApi when building a single graphics platform view commit[Build] Make sure to override RuntimeIdentifiers on UWP otherwise it builds all CPU versions and result in write conflicts view commit[Build] Use &quot;any&quot; instead of &quot;win&quot; view commit[Build] Make sure &quot;win&quot; is the default when building a netstandard2.0 reference (to make sure a RID-specific project always use RID) view commit[Build] Define output path (otherwise using a Platform might override them) view commit[Build] Properly setup RuntimeIdentifier if it was not a Graphics-API-specific one view commit[Build] Pack Xenko assets as part of NuGet packaging view commit[Build] Fix the NuGet publish build file view commit[Build] Removed unnecessary solution references view commit[Build] Properly compute &amp; restrict RuntimeIdentifier for ProjectReference view commit[Build] Better detection of default RuntimeIdentifiers view commit[Build] Fix RuntimeIdentifiers detection for graphics API mode view commit[Build] Adjust RuntimeIdentifier and XenkoPlatform detection view commit[Launcher] Remove custom Http code and decrease concurrency (which might be problematic since our packages are bigger than average) view commit[Launcher] Switch from gitter to discord view commitUpdated BACKERS.md view commit[Launcher] Bump to 3.0.5 view commitUpdate Crowdin configuration file view commitUpdate Crowdin configuration file view commit[Launcher] Skip unlisted packages, and don't use cache view commit[Launcher] Also use normal output data for error output of PackageInstall.exe view commit[Physics] Enable PhysicsShapesRenderingService only if there is a IGraphicsDeviceService view commitUpdate BACKERS.md view commitMerge remote-tracking branch 'origin/master-3.0' view commit[Physics] Add comment for PhysicsShapesRenderingService creation view commit[Build] Added option XenkoPublishSkipSamplesTemplates view commit[Build] Adjust platform detection (broken for multiplatform) and preparations for OSX view commit[Build] Additional fixes for computing runtime identifiers view commit[Build] Further fixes for computing runtime identifiers view commit[Build] Run Visual C++ checks only on .NET Framework MSBuild view commit[Build] Additional setup for macOS build view commitMerge pull request #323 from Kryptos-FR/feature/l10n view commit[Build] Native: Generate only x64 for macOS (.NET Core only supports x64) view commit[Graphics] Update to SDL 2.0.9 view commit[Graphics] SDL: Load from proper directory view commit[Shaders] Added macOS glslangValidator view commit[Shaders] Vulkan: Add &quot;NoSampler&quot; to reflection view commit[Core.IO] Disable LockFile code from macOS (not supported) view commit[Core] Copy native libs for more platforms, and only if CopyLocalLockFileAssemblies is not set to false view commit[Build] macOS: Update NativePath to latest version view commit[Graphics] Update SharpVulkan (works on OSX and easier to access NativeHandle) view commit[Graphics] macOS: Added MoltenVK view commit[GameStudio] Added project template for macOS view commit[Localization] Use $(RoslynTargetsPath) rather than $(MSBuildBinPath)\\Roslyn (which doesn't work with VS2019) view commit[Samples] Templates: Added Cache to list of ignored folders (can be leftover from build during previous Xenko versions) view commit[Graphics] macOS: Updated MoltenVK view commit[Assets] PackAssets: Use proper asset path when computing resources relative paths (fixes #326) view commit[VSPackage] Upgrade version to 3.0.3. Add support for VS2019. New release needed since RestoreHelper.cs was updated (fixes #324) view commitUpdate license for 2019 view commitUpdate BACKERS.md view commit[Build] Copy .xml and .pdb from NuGet package references when using new csproj format view commit[VSPackage] Run VSIX installer only for VS2017+ (fixes #332) view commit[Build] Use latest version of Windows 10 SDK view commit[Build] Update requirements view commit[Build] Publish was not properly copying native libs and compiled assets (fixes #331 and #334) -- thanks to jazzay for the initial implementation view commit[VSPackage] Make ProjectReference between Commands and Package private so that it doesn't exist as a NuGet dependency view commit[VSPackage] Add TODO for restore log view commit[Build] Native: use vcxproj directly to avoid TRK0005: Failed to locate: &quot;link.exe&quot; or &quot;cl.exe&quot; (fixes #337) view commit[Build] Properly include install-prerequisites.exe next to Xenko.GameStudio packageinstall.exe view commit[Install] Prerequisites installer: improve error reporting and retries (i.e. UAC not clicked) when installing Visual Studio or Build Tools view commit[Install] Prerequisites: Update to VC++ 2017 prerequisites view commit[Install] Prerequisites: Add &quot;.NET Core 2.1 development tools&quot; to list of Visual Studio prerequisites view commit[Install] Prerequisites: Improve Visual Studio detection/update mechanism view commitUpdate BACKERS.md view commit[GameStudio] Switch to Roslyn 2.10 view commit[Assets] PackAssets: properly copy RootAssets (fixes #347) view commit[Assets] Perform null check before upgrading PackageProfile view commit[Assets] PackageSession: Properly fallback to AssemblyName if PackageId is not set view commit[Assets] Remove asset upgrader code for versions before 3.0 view commitExplain how CLA is to be signed. view commitUpdate BACKERS.md view commit[Build] NuGetVersion reported to TeamCity was wrong view commit[VR] Fix UWP build (#213) view commit[Build] Add XenkoBuildDoc parameter to force TargetFramework even if not specified (seems necessary for older version of Roslyn used in docfx) view commit[GameStudio] Add missing RoslynPad assemblies in the composition context view commit[GameStudio] Allow drag &amp; dropping of read-only assets (as long as they wouldn't be modified) view commit[GameStudio] CodeLibrary projects were not properly initialized (assets couldn't be created) view commit[Build] Sign packageinstall.exe view commit[Build] Include RoslynPad assemblies with Xenko.Assets.Presentation package view commitUpdate ContributorLicenseAgreement.md view commit[Build] Unlocking C# 7.3! view commit[Core.Design] AssemblyContainer: Process deps.json files (fixes #365, fixes #342) view commitMerge branch 'master-3.0' view commit[Physics] Fix ColliderShapeAsset upgraders (was previously enclosed in XENKO_SUPPORT_BETA_UPGRADE) view commitMerge remote-tracking branch 'origin/master-3.0' view commitMerge remote-tracking branch 'origin/master-3.0' view commit[Build] Add option -NoSymbols to nuget push view commit[Graphics] D3D: add support for using typeless textures view commit[Reflection] AssemblyContainer: return already loaded assemblies if AssemblyName matches rather than loading new one (it seems that assembly is requested several times because we are not loading in the proper load context) view commit[Build] runtime.json: fix spacing view commit[Build] Added new CPU-specific variants to runtime.json (#370) view commit[Build] Bumped LLVM to 7.0.1 view commit[Render] Decouple RenderParticleEmitter from ECS view commit[Render] Decouple RenderUIElement from ECS view commit[Render] Decouple RenderMesh and others from ECS view commit[Rendering] Remove various dependencies from lighting code to LightComponent view commit[Rendering] Removed SceneInstance dependency from rendering code view commit[Rendering] Removed dependency from VisibilityGroup to ShadowMapRenderView view commit[Rendering] LightSkybox: Removed obsolete comment view commit[Rendering] Moved RenderGroup class to Rendering namespace view commit[Rendering] PostFX: remove dependency to CameraComponent view commit[Rendering] ShadowMapRenderer: remove unused nested class view commit[Rendering] ForceAspectRatioSceneRenderer: Made default aspect ratio local to remove dependency to CameraComponent view commit[Engine] Moved IndexingDictionary to Xenko.Core view commit[Rendering] EffectSystem: Remove dependency to Game class and move EffectCompilationMode in the same namespace view commit[Rendering] EffectSystem: Moved CreateEffectCompiler in a separate static class outside of Rendering code view commit[Rendering] Made ForwardLightingRenderFeature not dependent on LightProcessor anymore view commit[Rendering] Made LightProbe code not dependent on LightProbeProcessor anymore view commit[Rendering] Made LightShafts independent from LightShaftProcessor view commit[Rendering] Fixed RenderContext.GetCurrentCamera() tag owner view commit[Streaming] Removed dependency on Engine.Game view commit[Rendering] Splitted most of low-level rendering code into a new Xenko.Rendering assembly view commit[SpriteStudio] Fixes for SpriteStudio to work properly again view commit[Rendering] Make Xenko.Rendering platform-specific view commit[TextTemplating] T4: use a custom version of Mono.TextTemplating, including https://github.com/xen2/t4/commit/0d0b6db3ca3aba82fd7597951be2361265043e5e view commit[Serializaton] Bump format version (Rendering split) view commit[Build] Bump to beta02 view commit[Build] Fix .usrdoc generation and copy (fixes #377) view commit[NuGet] Remove deleted xenko sources during startup to avoid restore failures (fixes #338) view commitMerge remote-tracking branch 'weblate/master' view commit[Localization] Added Russian as a supported language view commit[Localization] Added a few missing important translations (which were omitted for ApplicationCommands) view commit[CrashReport] Bumped crash report to 1.0.1 (force HTTPS), anonymize reports and make sure it doesn't conflict with NuGetAssemblyResolver view commit[Localization] Updated po files view commit[Build] Regenerated sln (which were invalid since Xenko.Rendering was added) view commit[Samples] Removed reference to RenderContext.SceneInstance (fixes #386) view commitMerge remote-tracking branch 'weblate/master' view commitMerge remote-tracking branch 'weblate/master' view commit[Localization] Only generated when building Release, and added Russian in Xenko.Editor view commit[Localization] Added support for German and Spanish view commit[Localization] Rearranged targets so that localization code is unified view commitMerge remote-tracking branch 'weblate/master' view commit[Localization] Added support for Chinese (Simplified) view commit[Setup] Don't delete top level installation folder if not empty (esp. if it was installed in a root folder containing other programs by mistake!) view commit[Launcher] Use cache but always refresh it, even when installing. view commit[Launcher] Set LauncherApp as default project view commit[Launcher] Bump to 3.0.6 view commit[Templates] Fix version in reference to Xenko.Samples.Templates package view commit[Rendering] Add Sprite to rendering only if it's enabled view commit[Rendering] Properly register Xenko.Rendering in AssemblyRegistry (fixes #409 and fixes #410) view commitUpdate BACKERS.md view commitMerge remote-tracking branch 'weblate/master' view commit[GameStudio] Fast-reloading for types such as Material and Texture were not working as expected, forcing a full model reload on every edit view commit[GameStudio] Fix for fast-reloading view commit[GameStudio] Rewrote and simplified code for fast reloading (also support cases such as material layers properly now) view commit[GameStudio] AvalonDock: Fix a bug in AvalonDock 3.4.0 which sets CanClose to false once a LayoutAnchorable is dragged into a new floating window or a new pane. view commit[Physics] CleanContacts was working on previousFrameContacts rather than currentFrameContacts, resulting in warnings &quot;Pair not present&quot;. Thanks @EternalTamago for the fix! (fixes #88) view commitUpdate BACKERS.md view commit[Graphics] D3D11: Begin/End were not reentrant because of how Query were used (#427 #428) view commitMerge remote-tracking branch 'origin/master-3.0' view commit[Audio] Encode little bit longer to compensate for encoding delay (fixes #350) view commit[Build] Make sure _XenkoGenerateDependencies runs in all situations (otherwise unit tests won't work) view commit[Build] Make sure _XenkoGenerateDependencies runs also for C++ projects view commit[Build] Readjust _XenkoGenerateDependenciesAfterBuild target/comments view commit[Build] Unit tests: use proper xunit.console.exe depending on x86 or x64 view commit[Tests] Fix sample games unit tests view commit[Samples] Fix Sprite Studio demo (missing reference to SpriteStudio runtime) view commit[Editor] Preview View Model was not properly removing event handlers (fixes #438) view commit[Launcher] Improve log/error message in an attempt to investigate #310 view commit[NuGet] Switch to NuGet 5.0 view commit[Build] Require VS2019 instead of VS2017 to take advantage of new NuGet buildTransitive feature view commit[Build] Removed obsolete props files view commit[Build] Update NuGet.exe to 5.0 view commit[Build] Update build instructions view commit[VSPackage] Update to new AsyncPackage and upgrade/cleanup unecessary PackageReference view commit[Build] Bump MSBuild.Sdk.Extras to 2.0.24 view commitMerge remote-tracking branch 'origin/master' into vs2019 view commit[AssemblyProcessor] Fix a case where ImportReference was not called for GetTypeFromHandle(). Bumped Cecil to NuGet 0.10.3 rather than custom one. view commit[Assets] Added a new KeepReferences flag to AssetCloner view commit[Build] Stop detecting Android NDK version using folder name (latest VS2019 uses &quot;ndk-build&quot; folder name without version) view commit[Build] VS2019 now understand WindowsTargetPlatformVersion being set to 10.0 rather than a specific version. Also bump PlatformToolset to v142 view commit[Build] Converted some design-time libraries to .NET Standard 2.0 view commitRevert &quot;[AssemblyProcessor] Fix a case where ImportReference was not called for GetTypeFromHandle(). Bumped Cecil to NuGet 0.10.3 rather than custom one.&quot; view commit[AssemblyProcessor] Fix a case where ImportReference was not called for GetTypeFromHandle(). view commit[Assimp] Added error details if something went wrong (and test if scene is null to avoid NullReferenceException). view commitMerge remote-tracking branch 'weblate/master' view commit[Build] Reorganized targets to more easily choose multiple graphics platforms at once. view commit[Build] Bumped sln to use VS2019+ view commitRevert &quot;[Build] Reorganized targets to more easily choose multiple graphics platforms at once.&quot; view commit[Build] Reorganized targets to more easily choose multiple graphics platforms at once. view commit[Build] Removed deprecated Android armeabi CPU architecture (fixes #461) view commit[Vulkan] Back buffer: add missing ViewType parameter (2D) when creating back buffer view commit[Build] Android: Bump TargetSdkVersion to API level 27 (matches VS2019 install and TargetFrameworkVersion set in csproj) view commit[Launcher] NuGet: 1 hour timeout instead of 100 seconds as a workaround for https://github.com/NuGet/Home/issues/8120 (fixes #310) view commit[Launcher] Bump to 3.0.8 view commitRevert &quot;[Assimp] Updated assimp to official 4.1.0 and updated references in projects (closes #458)&quot; view commit[Build] Removed armeabi libraries to completely fix #461 (fixes #470) view commit[Build] Android: unify all minSdkVersion to 16 and targetSdkVersion to 27 (fixes #469) view commit[VSPackage] Bump to 3.0.5 view commit[Physics] Renamed NewShapeFromDesc to CreateShape view commit[Launcher] Allow to select Xenko version view commit[Build] Bumped Cecil to NuGet 0.10.4 rather than custom one. view commit[Physics] Update README.md with new BulletSharpPInvoke repo location view commitMerge pull request #289 from Eideren/bulletsharp_nuget view commit[Physics] Fix typo in PhysicsEngineFlags.ContinuosCollisionDetection (fixes #152) view commit[Build] Properly copy back IntDir/OutDir to IntermediateOutputPath/OutputPath for C++ project view commit[Input] Fix SDL key mapping for 0 and 1 view commit[Build] Updated editorconfig to contain VS2019 default style (which we use in Xenko) view commit[Build] XenkoContent: do not include in NuGet package as Content view commit[Graphics] Compare InputElements length before comparing elements view commit[Graphics] Remove unecessary GraphicsDevice.ThreadCount view commit[SDL] AppActivated and AppDeactivated were reverted view commit[Vulkan] Fix validation for texture upload view commit[Vulkan] Update glslang to 7.11.3214 (May 2019) view commit[Vulkan] PipelineState: Entry point name could be GC before used view commit[Vulkan] PipelineState: Properly set PrimitiveRestartEnable view commitRevert &quot;[Graphics] Vulkan: add support for R10G10B10A2_UNorm and R11G11B10_Float&quot; view commit[Vulkan] Fixed memory barriers for Clear functions view commit[Vulkan] UpdateSubresource: Fixed memory barrier view commit[Vulkan] Fixed mixup between Clear DSV and RT view commit[Build] Android: Updated to NDK r19 (with proper version check) and remove our custom libc++abi (first step for #460 and #379) view commit[Build] Android: Avoid &quot;error MSB4044: The &quot;FilterAssemblies&quot; task was not given a value for the required parameter &quot;DesignTimeBuild&quot;.&quot; with latest Xamarin.Android view commit[Audio] Android: Updated OpenSLES header (which were incompatible with arm64 due to SLuint32 mapping to long instead of int) (fixes #379) (fixes #460) view commit[Setup] Upgraded Visual C++ prerequisites to latest VS2019 ones view commit[Assimp] Properly copy Xenko.Assimp.*.dll (fixes #465) view commitMerge remote-tracking branch 'weblate/master' view commit[Build] Android: Workaround for https://github.com/onovotny/MSBuildSdkExtras/issues/174 view commit[Build] Transformed Xenko.Core.BuildEngine into a .NET Standard assembly view commit[Build] NETStandard: Switch from AssemblyBuilder.DefineDynamicAssembly view commit[Build] NETStandard: Remove unnecessary using view commit[Quantum] Renamed Index into NodeIndex to avoid clash with future System.Index view commit[Build] NETStandard: Remove unnecessary using view commit[Assets] Switch from implicit project to explicit project if necessary (fixes #442) view commit[Build] Switched to MSBuild.Sdk.Extras version 2.0.41 view commit[Build] Doc: Copy .xml file in ref folder view commitRevert &quot;[Build] Switched to MSBuild.Sdk.Extras version 2.0.41&quot; view commit[Build] Moved Microsoft.NETCore.Platforms reference from Xenko.Graphics to Xenko.Core (otherwise scenarios like referencing only Xenko.Core with win-x64 doesn't work) view commit[VSPackage] Syntax highlighting service was not properly registered asynchronously (fixes #651651) view commit[VSPackage] Fix Xenko detection view commit[VSPackage] Bump version to 3.0.6 view commit[Build] Replaced to for shaders/effects view commit[VSPackage] Add a launchSettings.json with proper parameters for easier debugging view commit[Input] SDL: fix OemPlus/Minus mapping (thanks nes) view commit[UI] Fix comment view commit[Vulkan] Fix some memory barriers in CommandList.Copy and CopyRegion view commit[Vulkan] CommandList: Don't use ImageView.Null in DescriptorImageInfo view commit[Streaming] Load a few initial mipmaps for streamed texture (otherwise they start as completely uninitialized: bad for rendering, and causes crash on Vulkan) view commit[Shaders] Fixed precompiled shader code generation view commit[Shaders] Added ElementType info to reflection for buffers/textures view commit[Vulkan] Properly store info if a texel buffer need to be integer or float. view commit[Shaders] Make sure NoSampler is added before computing list of resource groups (otherwise it ends up having no location attribute) view commit[Input] Fixed copyrights view commit[VSPackage] Fix Xenko version detection to work not only with nuget packages but also solution projects, so that it works with Xenko solution itself. view commitMerge remote-tracking branch 'weblate/master' view commit[Localization] Added Italian view commit[Localization] Added info in doc on how to translate and add new language. view commit[Build] Remove the -beta02 version suffix view commit[Shaders] D3D: Properly copy ElementType when duplicating resource binding per stage (fixes #515) view commit[Samples] Updated to 3.1.0.1 view commit[Setup] PackageInstall: check if VS Installer needs an update, and if yes try to do it automatically view commit[Build] Temporary workaround for .NET Core 3.0 new runtime identifier system (credits go to Solr for finding this fix) view commit[NuGet] Rewrote how assembly resolver is ordering assemblies found in nuget packages (there was a bug where it could select net46 instead of net461, resulting in crash) view commit[Build] Moved Xenko.Samples.Templates version in a single unified location to simplify future maintenance view commit[Setup] PackageInstall: Check VS Installer update if any workload needs to be installed (two UAC, but probably better than an error and extra step) view commit[Build] Bumped MSBuild.Sdk.Extras to 2.0.54 view commit[Build] Updated codesign certificates view commit[Build] Android: Use AssemblyName rather than RootNamespace for Resource class otherwise it might clash between some assemblies (i.e. Xenko and Xenko.Engine) --&gt; view commitRevert &quot;[Build] Remove the -beta02 version suffix&quot; and bump samples accordingly view commit[Build] Use default RuntimeIdentifier for default GraphicsApi, so that even if our custom RuntimeIdentifier are not merged properly, everything still work. view commit[Build] Removed previous workaround for https://github.com/NuGet/Home/issues/7351 view commit[Build] Bump NuGet.exe to 5.3.0 view commit[Build] Improved behavior of XenkoGraphicsApiDependentBuildAll view commitMerge branch 'runtimeid_fixes' into master-3.1 view commit[Build] Android: Fix NDB platform versions view commit[Graphics] Updated SharpDX to 4.2.0 view commit[UpdateEngine] AssemblyProcessor was generating invalid ldftn for virtual/interface calls (causing crashes with .NET Core 3). Switch to ldvirtftn for those instead. view commit[Graphics] Update D3D12 code for SharpDX 4.2.0 view commit[Build] AssemblyProcessor task need to change identity on each change otherwise we can run into https://github.com/microsoft/msbuild/issues/663[#](https://github.com/xenko3d/xenko/issues/)issuecomment-310530046 view commit[Graphics] Streamed compressed texture could end up having their initial texture size not multiple of 4, resulting in error at runtime loading. Skip these cases for now. view commit[Fonts] Fix how matrix is computed and compute realVirtualResolutionRatio depending on actual requestedFontSize (fixes #314) (fixes #364) view commit[Fonts] Dynamic fonts: use virtual resolution (otherwise real size changes on every camera move and requests new character, esp. if UI is in 3D) view commit[Fonts] Do not alter fontSize view commit[Fonts] Turned various internal parameters from ref to in (C# 7.2) view commit[Fonts] Turned various internal parameters from ref to in (C# 7.2) (missing file) view commit[Build] Added a trailing slash at the end of PackageOutputPath (maybe necessary since latest VS2019?) view commitRevert &quot;[Build] Add XenkoBuildDoc parameter to force TargetFramework even if not specified (seems necessary for older version of Roslyn used in docfx)&quot; view commit[Build] Separated XenkoGraphicsApis into one list per platform (otherwise we can't really control properly and risk overriding a platform with nothing) (fixes #544) view commit[Build] Remove GetSolutionConfigurationContents hack (which was necessary for WinStore/WinPhone port) (this allows command line build for Android/iOS #543) view commit[Build] Remove the -beta02 version suffix and bump samples accordingly view commitUpdated BACKERS.md view commitWaldiS (3):Added translation using Weblate (Polish) view commitTranslated using Weblate (Polish) view commitTranslated using Weblate (Polish) view commitWhyPenguins (1):Add output merger UAV binding. (#478) view commitYuuki terumi (5):Added translation using Weblate (Spanish) view commitAdded translation using Weblate (Spanish) view commitAdded translation using Weblate (Spanish) view commitAdded translation using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitdfkeenan (5):Allow spaces in TargetDir when building LauncherApp project. view commitUpdate Roadmap url to github projects. view commitAdd tooltip status text for link buttons. view commitAdd patreon link to launcher. view commitRemove AnswerHub link from launcher. view commitioc (1):Fix broken link to Teamcity Android build in ReadMe view commitjoreg (1):VR tracker support (#213) view commitmeriaizen86 (3):Translated using Weblate (Spanish) view commitTranslated using Weblate (Spanish) view commitUpdate XenkoDefaultSplashScreen.xktex view commitpansan (1):Translated using Weblate (Chinese (Simplified)) view commitphr00t (2):Make alpha optional in Color4 view commit[UI] don't invalidate text UI if we set it to the same thing view commitrgawry (1):Translated using Weblate (Polish) view commitssantos (1):Translated using Weblate (German) view committebjan (4):[Assimp] Updated assimp to official 4.1.0 and updated references in projects (closes #458) view commit[Assimp] Updated assimp to official 4.1.0 and updated references in projects (closes #458) view commitfixed null pointer exceptions in render features view commitremoving a package did not fire an event, so all related assets where still in the dependency manager view commitxwellingtonx (1):Fix editor resizing and to insert auto hide minimum size (fixes #189 and #190) view commit陈宇航 (1):Translated using Weblate (Chinese (Simplified)) view commitGenerated usinggit shortlog origin/master-3.0..origin/master-3.1 -w0,0,0 --pretty=format:&quot;* %s [view commit](https://github.com/xenko3d/xenko/commit/%H)&quot; | sed -r &quot;s/#([[:digit:]]*)/[#\\1](https:\\/\\/github.com\\/xenko3d\\/xenko\\/issues\\/\\1)/g&quot;"
  },{
    
    "title":"Recap October 2019",
    "excerpt": " Welcome to our October edition. Here's a quick recap on Xenko development and its community. Official 3.1 Release is in final testing phases. You can now sponsor Xenko through...",
    "author": "Jorn Theunissen",
    "date": "October 31, 2019",
    "category": "",
    "tags": "blog, search, Meeting",
    "url":"https://stride3d.net/blog/october-2019/",
    "content":"Welcome to our October edition. Here's a quick recap on Xenko development and its community. Official 3.1 Release is in final testing phases. You can now sponsor Xenko through Github sponsors. Possible name change is being discussed. The first tutorial project is almost ready.Official 3.1 Release Git Sponsorship Possible Name Change Documentation Community Picks Voxel cone tracing based global illumination from Spike1 Heightmap Terrain from SilentCLD Official 3.1 Release 🔗The 3.1 was originally scheduled for release this month, but some last minute breaking changes prevented the release. The official release is now in its final testing phases and should be released shortly. Once the release is final, we can focus on planning out tasks and the new roadmap for 3.2.Git Sponsorship 🔗Next to Patreon you can now also sponsor Xenko development directly through Github sponsors. GitHub even doubles the money that is donated the first year up to $5000!Possible Name Change 🔗For those of you who have missed it: Xenko is looking for a possible rename of the engine. There have been lengthy discussions on Discord about the name we could pick. See the fixed topic in the Discord #name-change channel.Documentation 🔗The first tutorial project is almost ready. Users will be able to select tutorial templates from a Tutorial category in the project launcher. The first project “C# Beginner”, demonstrates 12 beginner programming concepts. The amount of tutorials, as well as intermediate and advanced tutorials, will be extended/added once the first release is done.Additionally, the code used in the project is directly referenced by the new documentation section which explains each individual tutorial level.Community Picks 🔗Check out these awesome community projects that people are working on:Voxel cone tracing based global illumination from Spike1 🔗Forum postGithub projectHeightmap Terrain from SilentCLD 🔗Github project"
  },{
    
    "title":"Xenko meets vvvv",
    "excerpt": "",
    "author": "",
    "date": "October 04, 2019",
    "category": "",
    "tags": "blog, search",
    "url":"https://stride3d.net/blog/xenko-meets-vvvv/",
    "content":"Xenko and vvvv 🔗When Xenko went fully open-source in 2018, one of my intent was to be able to engage directly with some of Xenko's most enthusiast customers and power users. vvvv is definitely a perfect example.vvvv is a hybrid visual/textual live-programming environment for easy prototyping and development.vvvv has been using Xenko under the hood for a while, e.g. for the Ocean of Air project.They also have various plans to leverage Xenko even further in the future gamma version.That's what led me to establish closer contact with them. One things led to another, and in May 2019 I jumped in with both feets and moved to Berlin. They've been graciously sponsoring Xenko and allowed me to use their office since then.My sincere thanks to them for supporting both Xenko and me!Please find vvvv announcement at https://vvvv.org/blog/vvvv-meets-xenkoCode signing certificates 🔗A few days ago, Xenko code signing certificate expired, leaving the project in a tough situation, where smooth releases were not possible anymore.vvvv graciously offered me to temporarily sign Xenko official releases with their own codesign certificate. So don't be surprised to see their name popping up next time you upgrade Xenko!This is only temporary and we are working to get our own code signing certificate as soon as possible. More to come soon on that front!"
  },{
    
    "title":"Contributor Meeting #1",
    "excerpt": "",
    "author": "",
    "date": "October 01, 2019",
    "category": "",
    "tags": "blog, search",
    "url":"https://stride3d.net/blog/contributor-meeting-1/",
    "content":"Hi everyone,Next to the community meetings were everyone can join in on the discussions, we now also have the contributor meetings. These contributor meetings are for the people who are actively participating in Xenko development. Last weekend we had our first gathering. Another thank you to all who participated!###SummaryDate of meeting: 28 September 2019Official release of 3.1The release of 3.1 is imminent. More details on this will be provided soon.Nuget package creation is the biggest task to be completed.General roadmapThe roadmap currently planned on Github is outdated. It needs to be updated and become more relevant to the capacity we currently have as Xenko contributors/developers.New freedcamp tasks will come out of this that can be assigned to contributors. Some areas of contribution:Xenko core (subsystems, frameworks, .Net version etc)Editor improvementsExamples/Tutorials: C# coding, Models/materials setup from Import to Scene, AnimationRoadmap for 3.2Planning out the next features is a big challenge, because there are so many things wanted/requested. Since Xen is the only full time core developer, we can probably only toggle 1 major feature next.After the 3.1 is released the strategy on which core feature should be implemented. This has yet to be decided. The next developer meeting will go deeper in to this.Example on what could be worked on: asset compiling/.NET Core 3Release cyclesWe will try to adapt a more frequent official release strategy. Even if that official release contains few fixes or improvements. We do not want to plan releases on fixed dates, but instead we do want to keep the 3-4 months idea in our mind. This should provide the community more reliability.Depending on the amount of fixes/improvements this will major or minor.Phr00t forkIt has proven difficult to merge functionality from phr00t fork to main xenko, but there is ongoing progress!2 users (Fdrobidoux and SilectCLD) are currently working on merging code. If you are interested in following the progress have a look at the task for this.Vulkan improvements will need to be done differently, and some work from xen2 has already landed for this.DocumentationThe C# basics tutorials are making progress, but the sample project is not quite there yet.Some better screenshots and a base tutorial scene that looks a little bit more appealing could be really useful.Release for this is extended by 1 month.Access rights:We can distribute some access rights among contributors to ofload some of task from Xen.Social media: SyrikZeroWebsite deployment Teamcity/Azure: JornAggrorName changeLet’s take it one step at a time: first let’s see what possible name we can come up with.Check the voting topic by Eideren for more info.General topics:We are aiming to do a contributor meeting every 2 months.This meeting was a long sit: 1.5 hours. Next meetings should be 1 hour at max, but preferable shorter.Using Discord for the meeting, was not ideal. We will try to see if we can use Google Hangouts for this.The timezone planning of the meeting did not go as planned even though Doodle does support this. This will be properly tested for the next meeting.Freedcamp will remain as the tool for planning generic tasks. Since most contributors have now joined, new members can only edit tasks if they are invited.##Want to join the contributors?Whether you are a developer, designer, artist or writer, you are always free to create Pull Requests or add issues to the Xenko github project.If you are interested in participating in the contributor meetings and the Xenko Freedcamp project, please send a private message to AggrorJorn using the Xenko forum. All you need to do is send in your email address and what areas of contributing you are interested in.You will be invited to join the publicly viewable Xenko Freedcamp project which we use to keep track of all sorts of tasks that people are working on. We can then also have a quick chat to get you up to speed on any tasks."
  },{
    
    "title":"September 2019",
    "excerpt": "",
    "author": "",
    "date": "September 23, 2019",
    "category": "",
    "tags": "blog, search",
    "url":"https://stride3d.net/blog/september-2019/",
    "content":"Hi everyone,Welcome to the September blog post of Xenko. In this blog, we will have a quick recap on what's going on with Xenko development and its community. From now on we will have a monthly recap blog to let the world know what we are up to.##Picking up speedSince the last developer meeting in July, it was made clear that Xenko really needs the help of the community to improve. Part of improving is making sure that the community can help out on various aspects of Xenko. This is not just the development of the Xenko engine itself, but also all the other processes that are involved around it. You can follow the ongoing forum discussion here.##New project overviewAs part of getting things done quicker, a new public project overview has been set up using Freedcamp. In this here we track of ongoing tasks, who is assigned to it and what possible milestones are. If you want to contribute to this project or just check out the current tasks, have a look.##What is being worked onHere are some of the things that are being worked on:New tutorials section for the documentation website. Starting with a section of C# basics with Xenko, we can start making it easier for people to get the hang of Xenko in no time. Here is a quick peek at how it is going to look like.Phr00t fork merging: The Phr00t fork contains many features that the main Xenko engine could benefit from. From countless API improvements to bigger features like Vulkan improvements. Right now contributors are looking in which features and functionality to move to the main Xenko repository.##Possible name changeFor those of you who have missed it: Xenko is looking for a possible rename of the engine. If you want to know more about the why and why not, have a look at this forum topic. Regardless of whether the name change will happen, we need to find a suitable candidate. In a few weeks, we will start a poll to narrow down the long list of suggested names. A more detailed blog on this will follow soon. In the meantime, if you have a great idea, feel free to make a suggestion in the topic above or in the Xenko discord channel “Name-change”."
  },{
    
    "title":"Community Meeting #2",
    "excerpt": "",
    "author": "",
    "date": "July 19, 2019",
    "category": "",
    "tags": "blog, search",
    "url":"https://stride3d.net/blog/community-meeting-2/",
    "content":"Time for our second community meeting.Yes, it has been renamed from Developer meeting to Community meeting to better reflect the intended target audience.This time, the idea is not only to find where Xenko should head next (I am sure there will be hundreds of ideas, many of them already waiting on GitHub issues!), but also to find more people volunteering to take over some of those tasks!Here is a tentative schedule for this meeting:UTC (GMT) Wednesday, 24 July 2019, 15:00:00UTCBerlin (Germany) Wednesday, 24 July 2019, 17:00:00CESTParis (France) Wednesday, 24 July 2019, 17:00:00CESTTokyo (Japan) Thursday, 25 July 2019, 00:00:00JSTSan Francisco (USA - California) Wednesday, 24 July 2019, 08:00:00PDTNew York (USA - New York) Wednesday, 24 July 2019, 11:00:00EDTLondon (United Kingdom) Wednesday, 24 July 2019, 16:00:00BSTIt will be held on Discord in the #dev-meetings channel.Please come define the future of Xenko with us!"
  },{
    
    "title":"Starbreach Demo",
    "excerpt": " Explore the impressive Starbreach demo, a testament to Stride's powerful 3D game development capabilities, featuring stunning visuals, smooth gameplay experiences, and a glimpse into the engine's potential for creating...",
    "author": "Virgile Bello",
    "date": "May 31, 2019",
    "category": "",
    "tags": "blog, search",
    "url":"https://stride3d.net/blog/starbreach-demo/",
    "content":"Explore the impressive Starbreach demo, a testament to Stride's powerful 3D game development capabilities, featuring stunning visuals, smooth gameplay experiences, and a glimpse into the engine's potential for creating immersive and engaging gaming worlds.Hi everyone, Silicon Studio agreed to release the Starbreach demo from GDC 2017, along with all associated assets as open source (see license), for the Xenko community to use. Code in the project is released under an MIT license, the assets are released under a attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license.Starbreach was originally developed as the Xenko GDC demo for 2016 by Silicon Studio with art support from N-iX production studios. Virgile Bello (xen), Xenko’s lead developer has spent a chunk of time updating the demo and assets to work with the latest release of the Xenko.You can find the demo and assets here:https://github.com/xenko3d/StarbreachAnd more on the licensing here: https://github.com/xenko3d/Starbreach/blob/master/LICENSE.mdXenko now has a great playable demo... Can we make it even better? 🔗The community is doing a great job building out the xenko 3.1.0.1 beta release especially filling in gaps, fixing bugs and fulfilling the promise of a community led game engine - so special thanks to Tebjan, phr00t, dfkeenan, Eideren, Venthe, Aggror, Pred, Jarmo, dio and xen to name only a few.With the release of Starbreach demo - we now have a great playable demo that shows off Xenko. xen’s thrown the glove down and done his part with getting release permission and updating - but can everyone in the community help make it even better? Maybe by adding additional AI, improving the game play or adding a new boss character or full levels? Source is on github and let’s discuss on Discord or in the Forum."
  },{
    
    "title":"Welcome TurboPlay as Gold Sponsor",
    "excerpt": " We're happy to announce TurboPlay is helping Xenko not only as a Gold Sponsor, but also have further plans to support Xenko in the future. ",
    "author": "Virgile Bello",
    "date": "February 12, 2019",
    "category": "",
    "tags": "blog, search, Announcement",
    "url":"https://stride3d.net/blog/turboplay-gold-sponsor/",
    "content":"We're happy to announce TurboPlay is helping Xenko not only as a Gold Sponsor, but also have further plans to support Xenko in the future.Our respective visions for a more open game engine and decentralized marketplace seem to have a lot in common.Thanks TurboPlay for supporting Xenko and its community! This is a very exciting milestone and hopefully the beginning of a new era for Xenko!Open the full post for the press release in all its glory.Press Release: TurboPlay Announces Videogame Engine Support With Xenko 🔗TurboPlay is pleased to announce Gold Sponsorship for the Xenko Game Engine and its Open Source Community.“We’re pumped to have the opportunity to support the Xenko development team and work with them to develop amazing new technologies for their community and ours! Xenko is a modern game engine technology developed entirely in C#. Xenko’s technology has incredible potential in today’s gaming market. Through this partnership we can provide direct support to Xenko indie developers,” said Vince McMullin, TurboPlay President and CEO.Launching in 2019, TurboPlay is developing a full-fledged marketplace ecosystem by maximizing exposure for unique indie content. TurboPlay is the world’s first ultra-modern, fully-scalable, fault-tolerant, peer-to-peer, videogames marketplace.“I'm super excited to work with TurboPlay! We’ll be able to achieve great things together. I believe that both organizations are philosophically aligned, embracing the ideas of permissive open-source, decentralized and distributed architectures to disrupt the status quo in the games industry,” explains Virgile Bello, Lead Engine Developer.TurboPlay plans to support Xenko in future endeavors, including their Indie Community, with developer grants supporting game development using both Xenko &amp; TurboPlay technologies.For further inquiries regarding this topic, please contact our CMO, Lisa Weeks, by email, lisaw@turboplay.com. Thank you.LinkedInhttps://www.linkedin.com/company/turboplayhttps://www.linkedin.com/company/xenkoTwitterhttps://twitter.com/trbplayhttps://twitter.com/xenko3dFacebook​https://www.facebook.com/TRBPlayhttps://www.facebook.com/xenko3dLink to the official press-release:https://www.newswire.com/news/turboplay-announces-videogame-engine-support-with-xenko-20801982"
  },{
    
    "title":"Community Meeting January 2019",
    "excerpt": " Get insights from Stride's first developer meeting, covering project status, development progress, and future plans for this versatile game engine. ",
    "author": "Virgile Bello",
    "date": "January 19, 2019",
    "category": "",
    "tags": "blog, search, Meeting",
    "url":"https://stride3d.net/blog/developer-meeting-1/",
    "content":"Get insights from Stride's first developer meeting, covering project status, development progress, and future plans for this versatile game engine.Now that Xenko 3.1 beta is well underway, it's time to prepare for the future.As part of this process, I would like to involve our newly formed community.The idea is to decide together during a developer meeting what are the next long-term targets for Xenko, and what to put in release 3.2+.The first developer meeting will be open to everybody (developers, users and potential future users).It's possible we then evolve toward a more moderated format if needed.Here is a tentative schedule for this meeting:Tokyo (Japan) Wednesday, 23 January 2019, 01:00:00JSTBerlin (Germany) Tuesday, 22 January 2019, 17:00:00CETParis (France) Tuesday, 22 January 2019, 17:00:00CETLondon (United Kingdom) Tuesday, 22 January 2019, 16:00:00GMTUTCSan Francisco (USA - California) Tuesday, 22 January 2019, 08:00:00PSTNew York (USA - New York) Tuesday, 22 January 2019, 11:00:00ESTUTC (GMT) Tuesday, 22 January 2019, 16:00:00It will be held on Discord in the #dev-meetings channel.Please come define the future of Xenko with us!"
  },{
    
    "title":"Xenko 3.1 Beta Released",
    "excerpt": " Explore the Xenko 3.1.0 beta release, featuring exciting new features, enhancements, and improvements in this powerful 3D game engine by Stride. ",
    "author": "Virgile Bello",
    "date": "December 24, 2018",
    "category": "",
    "tags": "blog, search, Release",
    "url":"https://stride3d.net/blog/release-xenko-3-1-0-beta/",
    "content":"Explore the Xenko 3.1.0 beta release, featuring exciting new features, enhancements, and improvements in this powerful 3D game engine by Stride.Just in time for Christmas, Xenko 3.1 Beta is out now!One of the major change is turning the engine into separate NuGet packages, published on NuGet.org.Merry Christmas and Happy Holidays!Xenko 3.1 Loves NuGet! Coming Soon Xenko Assets Distribution Full Switch to .NET Standard Xenko 3.1 Loves NuGet! 🔗Xenko was always a big proponent of NuGet: since first version, Xenko was distributed as a NuGet package.However, due to limitations (hello packages.config and project.json!), we were leveraging NuGet more as a distribution medium than proper NuGet packages: Xenko 3.0 is still a monolithic single package and it would not work out of the box when referenced from Visual Studio without using Xenko Launcher and Game Studio.Xenko 3.0 paved the way by making Xenko compatible with the new project system (game projects were referencing Xenko using a PackageReference).Today, Xenko 3.1 brings Xenko as a set of smaller NuGet package, each containing one assembly, with proper dependencies:As a result, it is now possible to create a game project that references only the packages you want. Here are a few examples of &quot;core&quot; packages:Xenko.Engine: allows you to use core engine runtime (including its dependencies)Xenko.Core.Assets.CompilerApp: compile assets at build timeXenko.Core.Mathematics or Xenko.Graphics: yes, if you want to make a custom project only using Xenko mathematics or graphics API without the full Xenko engine, you can!Xenko.Core.Assets, Xenko.Presentation or Xenko.Quantum: all those piece of tech being used to build Xenko tooling are also available for reuse in other projects. Nothing prevents you from generating assets on the fly too!Then, various parts of the engine are distributed as optional packages:Xenko.PhysicsXenko.ParticlesXenko.UIXenko.SpriteStudioXenko.VideoIf you don't reference those packages, they won't be packaged with your game either. In many situations, it results in a smaller packaged game and improved startup time.Also, you are free to replace those functionalities with alternative libraries.Coming Soon 🔗Xenko Assets Distribution 🔗Xenko Assets will be packed and distributed with NuGet automatically.Coming soon in next beta, C# projects containing Xenko assets will have those assets automatically NuGet packaged in a xenko folder.As a result, you will soon be able to generate NuGet package containing Xenko assets out of the box from Visual Studio and publish them on NuGet.org for general consumption for other Xenko users.We can't wait to see what will come up!Full Switch to .NET Standard 🔗Soon Xenko will support .NET Standard for most of its assemblies.Xenko games will be able to run on .NET Core for Windows (Linux is already supported)."
  },{
    
    "title":"Forums Opened, New Release With Image-Based Lighting",
    "excerpt": " Discover the latest Stride release featuring Cubemap Image-Based Lighting and join our newly opened forums for discussions, support, and collaboration. ",
    "author": "Silicon Studio Corporation",
    "date": "November 11, 2014",
    "category": "",
    "tags": "blog, search",
    "url":"https://stride3d.net/blog/forums-opened-new-release-with-cubemap-image-based-lighting/",
    "content":"Discover the latest Stride release featuring Cubemap Image-Based Lighting and join our newly opened forums for discussions, support, and collaboration.Forums Cubemap Image-Based Lighting Spotlight Shadowmaps Improvements Version 1.0.0-beta03 New Features Enhancements Issues fixed Breaking changes Known Issues Forums 🔗Due to popular demand, we have just opened a shiny new Xenko discussion forums!We hope this place will become an important place for our community to discuss, help each other, collaborate, improve Xenko and show us some of their work.Even though Xenko Team will follow discussions and might answer, we currently won't provide any official support here and might not answer your bug/feature requests (a forum is not well suited for that).Please use Xenko GitHub for bug/enhancement requests, and our AnswersHub website for Q&A.Cubemap Image-Based Lighting 🔗Over the next few months, on top of working on a level editor, we also want to improve the rendering quality. We know Xenko can scale well from mobile to high-end and we want to prove it!As part of this effort, this release includes image-based reflection lighting, with parallax correction.It supports multiple cubemaps: they will be accumulated during a specific deferred rendering step, similar to prelight rendering.Feel free to try it easily with a new dedicated sample, that you can create with only a few clicks inside Xenko Studio.Spotlight Shadowmaps 🔗On top of our already existing cascade directional shadowmaps, this release adds support for spotlight shadowmaps.Improvements 🔗We have done numerous bugfixes and improvements (see full details in changelog).Amongst them are a new UI slider component, physics has been modularized, Windows Phone/Store support has been improved (PCL support, properly build packages), GameStudio property grid should behave much better, etc...Version 1.0.0-beta03 🔗Release date: 2014/11/11New Features 🔗 Engine: Add cubemap components to place cubemaps in the scene or render them at runtime. Graphics: Add skybox renderer from a TextureCube (similar to background renderer). Graphics: Add cubemap reflections for deferred rendering. Graphics: Support of shadow mapping in forward rendering for spot lights. Only 1 cascade is supported at the moment. Samples: Add CubemapReflection sample. Samples: Add spot light shadow in ForwardRendering sample. Shaders: Add several cubemap shaders for sampling, reflection, parallax correction etc. UI: Add new UI element: Slider Website: Xenko Forums has just been opened. Feel free to use it to discuss about Xenko, help each other, collaborate and show off what you did with Xenko!Enhancements 🔗 Studio: Property grids have been reworked to be more efficient and easily extendable. Studio: Numeric input controls have been improved. Physics: Physics assembly now depends on Engine (instead of the opposite). Soon Physics (and some other modules) will become optional. Input: Allow emulation of several touch pointers at a same time with mouse different buttons.Issues fixed 🔗 Assets: Fix shininess import from FBX files. Core: EnumerableExtensions.LastIndexOf() wasn't working properly (#62). Game: Properly support windows with height 0 when AllowUserResizing is true (#65). Game: GameForm is created with a black background, to avoid initial flickering while Windows is being initialized (#54). Input: Alt+F4 is now properly working on Windows Store/Phone platforms (#74). Input: Properly maps all extended keyboard keys on Windows Store/Phone platforms (#84). Input: Fix several crashes and bugs in GestureRecognizers and mouse button states. Misc: PCL can now be used in Windows Store/Phone platforms (#72). Samples: SimpleDynamicTexture was using expected screen size instead of actual screen size, resulting in incorrect picking in fullscreen mode (#75). Shaders: Geometry shaders are forced to transmit SV_Position stream to pixel shaders. Shaders: Compositions (especially arrays) couldn't be used in child classes of the one containing their declaration. Function and member calls weren't correctly resolved. Studio: Fix preview and thumbnail of materials with normal map. Studio: Fix binding errors in the property grid (#29). Studio: Fix undesired hue changes and loss of precision in extremal values in the color picker. Studio: Fix \"Show in explorer\" on assets. UI: UIImage borders were not properly rendered when image had Orientation.Rotated90.Breaking changes 🔗 Graphics: Remove Rotated180 and Rotated90C from ImageOrientation enumeration for code simplicity and efficiency purpose. Graphics: Change ImageFragment.Region type from Rectangle to RectangleF and corresponding batch draw function API (SpriteBatch/UIBatch). Graphics: CopyRegion now contains additional parameters for subresource indices and destination offset. Graphics: RasterizerState and DepthStencilState constructors are now private to match other Graphics classes. static New() should be used instead (#83). Physics: Physics engine initialization has changed since now Physics is a optional module. (please check updated samples) Physics: Added Convex Hull simple wrap shape and complex decomposition as well.Known Issues 🔗 Physics: Complex convex hull decomposition can be a very long process and there is visual feedback for it. Physics: Convex hull shape debug shapes in game studio are not rendering very well, although the asset will be OK."
  },{
    
    "title":"Xenko is Going Open Source",
    "excerpt": " We are thrilled to announce that Xenko is going open source on GitHub. This is an important step toward the empowerment of game developers. We hope that this will...",
    "author": "Silicon Studio Corporation",
    "date": "October 17, 2014",
    "category": "",
    "tags": "blog, search, Announcement",
    "url":"https://stride3d.net/blog/new-version-open-sourcing/",
    "content":"We are thrilled to announce that Xenko is going open source on GitHub. This is an important step toward the empowerment of game developers. We hope that this will make you more confident in using Xenko. You will have also an unique opportunity to contribute to the project and see by yourself how Xenko engine is working.License Binary Release version Source version Contributions New Platforms New Samples Roadmap Release notes 1.0.0-beta01 New Features Enhancements Issues fixed Breaking changes Known Issues License 🔗Xenko is now delivered with two licences types:Binary Release versionSource versionBinary Release version 🔗Xenko binary release (as distributed on our website, with unmodified signed assemblies) is under the &quot;Xenko 1.x version&quot; License Agreement.It allows you to create games and distribute them freely and royalty-free, as long as you use the signed binary runtime.Source version 🔗Most of Xenko source code is released under the GPL v3 License (unless otherwise stated).A few specific parts (stated explicitely in the source header) are released under MIT, CPLor Apache 2.0 (usually matching license of original contribution).Some libraries (i.e. SiliconStudio.Core) will probably be converted to MIT later.It means that if you use Xenko built from sources (either unmodified or modified), you must publish source of your game,as well as any changes to Xenko that you might have done (as per GPLv3 license).Even for Binary Release version users, it allows to easily browse the sources and understand what's happening inside Xenko.If you want specific license terms (i.e. use a modified and/or self-compiled version of Xenko for your project),feel free to contact us at contact@stride3d.netContributions 🔗We gladly accept external contributions. Feel free to submit us pull requests and we will consider them for inclusion.Contributors will need to sign electronically a Contributor License Agreement, available here (based on Harmony).It allows us to use your changes in the commercial version, and relicense code easily (in case we decide to go MIT at some point for example).Otherwise you are free to fork, as long as you maintain GPL v3 License.New Platforms 🔗We are also pushing a new release 1.0.0-beta01. This release is most notably adding support for two new platforms:Windows RT/StoreWindows PhoneIt means that you can now target easily several major platforms: WindowsWindows PhoneWindows StoreiPhoneiPadAndroid PhoneAndroid Tablet You will be able to upgrade the platforms on your existing project by simply using the contextual menu Update Package\\Update Platforms on a package in Xenko Studio.New Samples 🔗We are also delivering 3 new samples:SimpleTerrain that demonstrates how to generate an entity model/mesh at runtime by displaying a heightmap terrainSimpleDynamicTexture that demonstrates how to dynamically upload CPU textures to the GPURenderSceneToTexture that shows how to render your models in a render target from another camera point of view and display in a textureRoadmap 🔗Towards the coming months, we are expecting to deliver lots of new features!This is a short list of the things we have in the pipe:A full scene editorAn improved animation systemReal-time dynamic scripting from Xenko Studio and Visual Studio while the game is running (on Windows, at development time)Several advanced new rendering techniques and post effects.Support for more platforms (OSX, Linux...)As we have done so far, we will try to provide a sustained delivery of new versions, with lots of small fixes and enhancements along the bigger features, as soon as they are ready (even in an alpha stage).At some point, we will open a user voice to collect your votes. Don't hesitate to post your thoughts on our answers hub!Release notes 1.0.0-beta01 🔗Release date: 2014/10/17New Features 🔗Assets: Materials can be compiled into a shader without being attached to a mesh. Use the key MaterialAsset.GenerateShader in your pdxfxlib file to allow this feature.Engine: Add support for Windows Store and Windows Phone projects.Misc: Assemblies are now all signed.Studio: Create Windows Store and Phone Projects.Studio: Deploy Windows Phone project directly from Game Studio.Studio: Add and remove platforms of existing game. Force to regenerate platform specific projects.Studio: Choose what platforms to create when starting from a sample.UI: Add support for MouseOver on Windows (mainly MouseOverState property/event in UIElement)Enhancements 🔗Samples: Load material and lighting configuration for the stand in ForwardLighting and DeferredLighting.Shaders: Incorrect shaders are no longer cached preventing NullReferenceException errors at compilation time.Studio: Generated solutions are created with VS2013 as default.Studio: The 'sprite' editor can now be used on UIImages too.UI: Improve default design of Button and EditText.UI: Make the EditText's caret blink and dissociate caret/selection colors.UI: Add support for mouse selection in EditText on Windows.UI: Create default design for ImageToggle.UI: UIImages are now regrouped into UIImageGroup the same way as SpriteGroup. The runtime-time and assets classes share the same hierarchy.Issues fixed 🔗Assets: Orientation of meshes from the assimp importer is now correct (#22).Assets: Mesh and materials are correctly associated during assimp import.Materials: Material always contains a diffuse part even if their color is black.Samples: Exhaustive shaders permutations for DeferredLighting.Shaders: The default shader is correct even when there is no parameter to generate it (no diffuse, no specular...).Shaders: Fix specular in deferred shading.Shaders: Correctly rename class in AmbientMapShading.pdxsl.Shaders: Fix issues related to geometry shader creation.Studio: New LightingAsset asset can be created in GameStudio.Studio: Unsupported assets are ignored when trying to be imported (#42).Studio: Fix issue with asset thumbnails sometimes not being updated.Studio: Some properties of the Material assets displayed with wrong/missing controls.UI: Fix problem in Canvas MeasureOverride method when measured with infinite values.Breaking changes 🔗Assets: SpriteGroup asset field 'Sprites' has been renamed 'Images' (.pdxsprite files can recovered by renaming the field inside the file).Assets: UIImage assets does not exist any more and have been replaced UIImageGroup assets. The old .pdxuiimg files cannot be easily recovered. The new .pdximage files can be easily created using the GameStudio 'sprite' editor.UI: EditText's EditInactiveImage and EditActiveImage properties have been renamed InactiveImage and ActiveImage.UI: Simplify ToggleButton. It now behaves like a Button with persistent states.Known Issues 🔗iOS: On slow phones, app might be too slow to start with Visual Studio attached (it gets killed by iOS). We will rearrange our initialization sequence.iOS: Rebuild might sometime not use latest version.Samples: Due to the way we now create platform-specific projects, samples specific icons on non-Windows platforms are currently gone. Later, a project setting page in Game Studio should make this setting available again.Samples: Since there is no accelerometer Input API yet, Accelerometer sample is currently removed.Windows Store/Phone: UI EditText and Game Resume/Destroy cycles are not implemented.Windows Store/Phone: SharpFont.dll is still compiled against .NET 4.5 (might not pass certifications)."
  },{
    
    "title":"Xenko 1.0 Alpha Released",
    "excerpt": " A new version is available for download. Run the Xenko Studio to download and install the latest version. ",
    "author": "Silicon Studio Corporation",
    "date": "September 06, 2014",
    "category": "",
    "tags": "blog, search, Release",
    "url":"https://stride3d.net/blog/new-version-1-0-alpha/",
    "content":"A new version is available for download. Run the Xenko Studio to download and install the latest version.In Progress Version 1.0.0-alpha07 Version 1.0.0-alpha06 In Progress 🔗General: Integration of Spine General: Preparations for open-source releaseIssue: Installed in c:\\ProgramData (#2)Issue: InvalidOperationException: No screen modes found (#7)UI: Improve layout of GameMenu sample.UI: Improve grid children measure process (fix some layout bugs).Version 1.0.0-alpha07 🔗Release date: 2014/09/04Issues fixedStudio: Exiting the Xenko Studio was generating errors.Version 1.0.0-alpha06 🔗Release date: 2014/09/04New FeaturesIntegrated release notes in the welcome menuWelcome to the new workspace!Integrate release notes in the new workspaceEngine: Reload automatically shaders at runtime when they are modified on the disk (Windows only)Shaders: New DiscardTransparentThreshold shader. Set the threshold below the one a pixel will be discarded.Shaders: New shaders dealing with normal and tangent skinning.Materials: Add UseTransparentMask parameter key in material to disable alpha blending and use the alpha channel as a mask of the texture. Use AlphaDiscardThreshold parameter key to set the desired threshold below the one a pixel will be discarded.Assets: Support for TGA and PSD files for textures.UI: Add horizontally align text in EditText using property TextAlignment.UI: Add mouse wheel delta value since last frame using property IInputManager.MouseWheelDelta.UI: Add image stretch type StretchType.FillOnStretch and modify StretchType.Fill behavior (previous StretchType.Fill mode is now implemented by StretchType.FillOnStretch).EnhancementsGeneral: Visual Studio Express 2013 can now open Xenko Projects (with some limitations) (#4)Engine: Change default Windows output type to Windows Application (#8): By default, a console is only opened when there is a message, assemblies are created in debug and the debugger is not attached.Engine: Add anisotropic texture filtering on mobile platforms that support it.Sample: AnimatedModel. Add lighting to the model. Use default Xenko pre defined shaders.Sample: ForwardLighting. Add transparent meshes.Sample: Set the same orientation for all samples on Android.Studio: Modal windows are not displayed in the taskbar anymoreStudio: Improvement in the sprite editor: possibility to drop image files in the interface, improved region selection rectangle.Studio: Performance improvement in the editor, particularly in the sprite editorUI: Allow 0-sized strip definition in Grid.UI: Allow mixing of relative/absolute element positioning in Canvas.UI: Allow user to modify values of the UIRenderingContext.Issues fixedBuild: Android project fails to build (#3)Studio: GameStudio was using 100% of one CPU core (#1)Studio: Splash Screen always on top (#6)Studio: Fix GameStudio crash when importing assets using the add files button (#9)Studio: Build log is now displaying build feedbackStudio: Fixed the Hue selection in the color pickerEngine: Reduce effect change detection footprint (for example when changing the lighting configuration of the scene).Engine: Reuse rendering states.Shaders: Fix incorrect normal and tangent skinning in shaders.Shaders: Fix converter Hlsl to Glsl.Input: Fixed InputManager crash when window size is reach 0.Physics: Character Controller was not working properly on iOS."
  },{
    
    "title":"Stride Blog is Online",
    "excerpt": "",
    "author": "Silicon Studio Corporation",
    "date": "September 05, 2014",
    "category": "",
    "tags": "blog, search, Announcement",
    "url":"https://stride3d.net/blog/online/",
    "content":"Welcome to our new blog!You will be able to get the latest news from the Stride Team about the development of Stride.The Stride Team."
  }
]